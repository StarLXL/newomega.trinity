{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm/legacy lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","definitions/Ships.js","common/OmegaLoadingScreen.js","scenes/ShipSelection.js","definitions/Commanders.js","scenes/CommanderSelection.js","scenes/Combat.js","ui/OpponentSelection.js","ui/Leaderboard.js","ui/ShowLogs.js","definitions/GameEngine.js","OmegaApp.js","App.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Ships","name","asset","description","stats","cp","hp","attack","base","variable","defence","speed","range","agility","scale","combatScale","visuals","beamColor","Color3","beamWidth","Math","PI","OmegaLoadingScreen","window","document","getElementById","style","display","ShipSelection","props","useState","currentShip","setCurrentShip","_","selectedShips","setSelectedShips","currentCp","setCurrentCp","scene","setScene","loadedMeshes","setLoadedMeshes","resourcesLoaded","setResourcesLoaded","notEnoughShips","setNotEnoughShips","getCurrentCP","reduce","memo","num","index","onDone","loadResources","reject","assetsManager","AssetsManager","each","ship","addMeshTask","onSuccess","task","newMeshes","shipIndex","position","Vector3","Zero","rotation","scalingDeterminant","isVisible","onFinish","tasks","load","loadCurrentShip","loadedMeshesOverride","meshes","mesh","shipAdderClassName","className","antialias","adaptToDeviceRatio","canvasId","onSceneMount","canvas","getEngine","loadingScreen","camera","ArcRotateCamera","minZ","lowerRadiusLimit","upperRadiusLimit","activeCameras","push","attachControl","HemisphericLight","Up","intensity","background","Layer","isBackground","texture","level","wAng","onBeforeRenderObservable","add","deltaTimeInMillis","getDeltaTime","y","z","accuracy","onClick","cost","maxCp","newShip","newShipSafe","length","href","CommanderRarities","CommanderRaritiesColors","0","1","2","3","Commanders","modifier","vs","pickAnimations","positionOffset","rarity","CommanderSelection","currentCommander","setCurrentCommander","commander","commanderIndex","loadCurrentCommander","invoke","filter","animationGroups","group","contains","commanderRarityColor","commanderRarityString","commanderAttackSuffix","has","commanderAttackString","commanderDefenceSuffix","commanderDefenceString","upperAlphaLimit","lowerAlphaLimit","upperBetaLimit","lowerBetaLimit","color","newCommander","newCommanderSafe","Combat","round","setRound","showingResult","setShowingResult","combatLog","setCombatLog","shipMeshesLhs","shipMeshesRhs","afterImportMeshes","basePosition","count","direction","isLhs","newMesh","material","StandardMaterial","uniqueId","diffuseColor","i","clonedMesh","clone","floor","localLog","showAttacks","move","sourceMeshes","targetMeshes","source","sourceMesh","ind","target","targetMeshIndex","targetMesh","mat","alpha","backFaceCulling","lines","Mesh","CreateTube","FRONTSIDE","convertToFlatShadedMesh","setTimeout","dispose","showLaser","playMoves","moves","shipHpsLhs","shipHpsRhs","_recursiveMover","mainResolver","moveType","all","slide","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CONSTANT","keyFrames","frame","value","x","abs","targetPosition","setKeys","animations","beginAnimation","moveShips","damage","hpPerShip","hpsLeft","shipsLeft","max","ceil","shipsToRemove","removeIndex","meshToRemove","shift","ParticleHelper","CreateAsync","set","systems","forEach","s","worldOffset","disposeOnStop","maxSize","minSize","start","applyHpsToVisuals","newEntry","logAttack","playRound","result","rounds","logRoundStart","lhsMoves","lhs","isEmpty","rhsMoves","rhs","commanderAssetLhs","commanderLhs","commanderAssetRhs","commanderRhs","selectionLhs","sceneFile","selectionRhs","playCombat","alt","src","isDead","shipHps","find","shipHp","lhsHp","rhsHp","getWinnerString","OpponentSelection","opponents","opponent","key","selectOpponent","Leaderboard","leaderboard","entry","player","wins","toNumber","losses","ShowLogs","logs","log","selectLog","args","GameEngine","shipPositionsLhs","shipPositionsRhs","shipMaxHpLhs","shipMaxHpRhs","getTarget","shipPositionsOwn","shipPositionsEnemy","shipHpsEnemy","distances","positionTarget","enemyShip","distance","Number","MAX_SAFE_INTEGER","min","indexOf","getTargetLhs","getTargetRhs","calculateDamage","sourceHp","sourceMaxHp","random","capDamage","isPositionFree","positionIter","shipPositions","speedCheck","proposedPosition","moveShipRhs","logShoot","logMove","logLhsShoot","logLhsMove","logRhsShoot","logRhsMove","Modes","OmegaApp","defaultLoadedState","mode","loading","trainingSelfSelection","trainingResult","trainingSelfCommander","trainingOpponent","trainingOpponentSelection","trainingOpponentCommander","trainingCp","defenders","settingDefence","settingAttack","defaultUnloadedState","ownAccount","web3Loaded","gameEngineContract","gameManagerContract","state","selection","this","setState","registerDefence","defenceSelection","_selectionToCp","filters","FightComplete","fromBlock","provider","getBlockNumber","b","toBlock","attacker","getLogs","logsParsed","interface","parseLog","_parseMoves","_parseHp","hpInst","resultJson","getAllDefenders","getLeaderboard","training","bind","commanders","showLogs","defend","shipSelectionDone","commanderSelectionDone","commanderPreviewDone","opponentSelectionDone","logSelectionDone","_initWeb3","ethers","providers","Web3Provider","ethereum","signer","getSigner","send","accounts","_loadContracts","gameEngineJson","require","Contract","gameManagerJson","Component","App","addEventListener","appManager","setVisible","screen","orientation","lock","path","component","exact","Sentry","dsn","debug","autoSessionTracking","tracesSampleRate","ReactDOM","render"],"mappings":"6IAAA,IAAIA,EAAM,CACT,2CAA4C,CAC3C,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAi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","file":"static/js/main.d6951b00.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t591,\n\t\t43\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t592,\n\t\t44\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t593,\n\t\t45\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t594,\n\t\t24\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t595,\n\t\t25\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t596,\n\t\t11\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t597,\n\t\t12\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t598,\n\t\t46\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t599,\n\t\t47\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t600,\n\t\t48\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t601,\n\t\t49\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t602,\n\t\t81\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t603,\n\t\t82\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t604,\n\t\t50\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t605,\n\t\t51\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t606,\n\t\t52\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t607,\n\t\t53\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t608,\n\t\t54\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t609,\n\t\t55\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t610,\n\t\t56\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t611,\n\t\t57\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t612,\n\t\t83\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t613,\n\t\t20\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t614,\n\t\t21\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t615,\n\t\t58\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t616,\n\t\t59\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t617,\n\t\t84\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t618,\n\t\t39\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t619,\n\t\t40\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t620,\n\t\t60\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t621,\n\t\t61\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t622,\n\t\t62\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t623,\n\t\t63\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t624,\n\t\t64\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t625,\n\t\t65\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t626,\n\t\t26\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t627,\n\t\t27\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t628,\n\t\t18\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t629,\n\t\t19\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t630,\n\t\t14\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t631,\n\t\t15\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t632,\n\t\t13\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t633,\n\t\t16\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t634,\n\t\t17\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t635,\n\t\t66\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t636,\n\t\t67\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t637,\n\t\t32\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t638,\n\t\t33\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t639,\n\t\t68\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t640,\n\t\t69\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t641,\n\t\t41\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t642,\n\t\t42\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t643,\n\t\t37\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t644,\n\t\t38\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t645,\n\t\t85\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t646,\n\t\t70\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t647,\n\t\t28\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t648,\n\t\t29\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t649,\n\t\t71\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t650,\n\t\t72\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t651,\n\t\t34\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t652,\n\t\t35\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t653,\n\t\t86\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t654,\n\t\t87\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t655,\n\t\t73\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t656,\n\t\t88\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t657,\n\t\t89\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t658,\n\t\t74\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t659,\n\t\t75\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t660,\n\t\t36\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t661,\n\t\t76\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t662,\n\t\t77\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t663,\n\t\t78\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t664,\n\t\t30\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t665,\n\t\t31\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t666,\n\t\t22\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t667,\n\t\t23\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t668,\n\t\t90\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 529;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t672,\n\t\t98\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 531;\nmodule.exports = webpackAsyncContext;","import { Color3 } from '@babylonjs/core';\n\nexport const Ships = [\n    {\n        name: 'Frigate',\n        asset: 'assets/frigate/',\n        description: 'Cheap, quick and agile, the frigate can be used as a quick strike weapon, able to reach enemy lines quickest. Can not withstand much heat though.',\n        stats: {\n            cp: 1,\n            hp: 1000,\n            attack: {\n                base: 30,\n                variable: 5,\n            },\n            defence: 2,\n            speed: 4,\n            range: 4,\n            agility: 25,\n        },\n        scale: 1,\n        combatScale: 0.6,\n        visuals: {\n            beamColor: new Color3(0, 1, 0),\n            beamWidth: Math.PI / 256,\n        },\n    },\n    {\n        name: 'Cruiser',\n        asset: 'assets/cruiser/',\n        description: 'As lightest of the heavier ships, the cruiser retains some of the speed and maneuverability of the frigate while offering big improvements in the hull and weaponry.',\n        stats: {\n            cp: 4,\n            hp: 4000,\n            attack: {\n                base: 100,\n                variable: 20,\n            },\n            defence: 12,\n            speed: 3,\n            range: 7,\n            agility: 15,\n        },\n        scale: 6,\n        combatScale: 0.4,\n        visuals: {\n            beamColor: new Color3(0.2, 0.2, 1),\n            beamWidth: Math.PI / 96,\n        },\n    },\n    {\n        name: 'Destroyer',\n        asset: 'assets/destroyer/',\n        description: 'The destroyer is an effective killing machine, providing both effective support and serving as an artillery line raining heavy damage on enemy ships.',\n        stats: {\n            cp: 5,\n            hp: 5000,\n            attack: {\n                base: 130,\n                variable: 10,\n            },\n            defence: 15,\n            speed: 2,\n            range: 8,\n            agility: 10,\n        },\n        scale: 9,\n        combatScale: 0.5,\n        visuals: {\n            beamColor: new Color3(1, 1, 1),\n            beamWidth: Math.PI / 96,\n        },\n    },\n    {\n        name: 'Battleship',\n        asset: 'assets/battleship/',\n        description: 'Fitted with state of the art weaponry and protection, the battleship is the ultimate fighting force in the galaxy.',\n        stats: {\n            cp: 15,\n            hp: 10000,\n            attack: {\n                base: 200,\n                variable: 5,\n            },\n            defence: 20,\n            speed: 1,\n            range: 8,\n            agility: 0,\n        },\n        scale: 12,\n        combatScale: 0.6,\n        visuals: {\n            beamColor: new Color3(1, 0, 1),\n            beamWidth: Math.PI / 64,\n        },\n    },\n];\n","export class OmegaLoadingScreen {\n    displayLoadingUI() {\n        const loadingScreenDiv = window.document.getElementById('omegaLoadingScreen');\n        loadingScreenDiv.style.display = 'block';\n    }\n\n    hideLoadingUI() {\n        const loadingScreenDiv = window.document.getElementById('omegaLoadingScreen');\n        loadingScreenDiv.style.display = 'none';\n    }\n}\n","import React, { useState } from 'react';\nimport _ from 'underscore';\nimport { Engine, Scene } from 'react-babylonjs';\nimport { Vector3, AssetsManager, Layer, ArcRotateCamera, HemisphericLight } from '@babylonjs/core';\nimport '@babylonjs/loaders';\nimport { Ships } from '../definitions/Ships';\nimport { OmegaLoadingScreen } from '../common/OmegaLoadingScreen';\nimport './ShipSelection.css';\n\nexport const ShipSelection = (props) => {\n    const [ currentShip, setCurrentShip ] = useState(0);\n    const [ selectedShips, setSelectedShips ] = useState(_.map(Ships, () => { return 0 }));\n    const [ currentCp, setCurrentCp ] = useState(0);\n    const [ scene, setScene ] = useState(null);\n    const [ loadedMeshes, setLoadedMeshes ] = useState([]);\n    const [ resourcesLoaded, setResourcesLoaded ] = useState(false);\n    const [ notEnoughShips, setNotEnoughShips ] = useState(false);\n\n    const nextShip = () => {\n        const newShip = currentShip + 1;\n        const newShipSafe = newShip >= Ships.length ? 0 : newShip;\n        setCurrentShip(newShipSafe);\n        loadCurrentShip(newShipSafe, scene);\n    };\n\n    const prevShip = () => {\n        const newShip = currentShip - 1;\n        const newShipSafe = newShip < 0 ? Ships.length - 1 : newShip;\n        setCurrentShip(newShipSafe);\n        loadCurrentShip(newShipSafe, scene);\n    };\n\n    const getCurrentCP = (selectedShips) => {\n        return _.reduce(selectedShips, (memo, num, index) => {\n            return memo + (num || 0) * Ships[index].stats.cp;\n        }, 0);\n    };\n\n    const addShip = () => {\n        const cost = Ships[currentShip].stats.cp;\n        const currentCp = getCurrentCP(selectedShips);\n        if (currentCp + cost <= props.maxCp) {\n            selectedShips[currentShip] = (selectedShips[currentShip] || 0) + 1;\n            setSelectedShips(selectedShips); // TODO NEEDED?\n            setCurrentCp(getCurrentCP(selectedShips));\n        }\n\n        setNotEnoughShips(false);\n    };\n\n    const removeShip = () => {\n        if (selectedShips[currentShip] > 0) {\n            selectedShips[currentShip]--;\n            setSelectedShips(selectedShips); // TODO NEEDED?\n            setCurrentCp(getCurrentCP(selectedShips));\n        }\n    };\n\n    const onDone = () => {\n        props.onDone(selectedShips);\n    };\n\n    const afterLoadShip = (scene, newMeshes, shipIndex) => {\n        newMeshes[0].position = Vector3.Zero();\n        newMeshes[0].rotation = new Vector3(-Math.PI / 12, Math.PI, 0);\n        newMeshes[0].scalingDeterminant = 0.001 * Ships[shipIndex].scale;\n        newMeshes[0].isVisible = false;\n    };\n\n    const loadResources = (scene) => {\n        return new Promise((resolve, reject) => {\n            const loadedMeshes = [];\n\n            const assetsManager = new AssetsManager(scene);\n            _.each(Ships, (ship, index) => {\n                const task = assetsManager.addMeshTask(index, '',\n                    Ships[index].asset,\n                    'scene.gltf');\n                task.onSuccess = (task) => {\n                    loadedMeshes[index] = task.loadedMeshes;\n                    afterLoadShip(scene, task.loadedMeshes, index);\n                };\n            });\n\n            assetsManager.onFinish = (tasks) => {\n                setLoadedMeshes(loadedMeshes);\n                resolve(loadedMeshes);\n            };\n\n            assetsManager.load();\n        });\n    };\n\n    const loadCurrentShip = (currentShip, scene, loadedMeshesOverride) => {\n        const meshes = loadedMeshesOverride || loadedMeshes;\n\n        _.each(scene.meshes, (mesh) => {\n            mesh.isVisible = false;\n        });\n\n        _.each(meshes[currentShip], (mesh) => {\n            mesh.isVisible = true;\n        });\n    };\n\n    const onSceneMount = (e) => {\n        const { canvas, scene } = e;\n        setScene(scene);\n\n        scene.getEngine().loadingScreen = new OmegaLoadingScreen();\n\n        const camera = new ArcRotateCamera('camera1',\n            Math.PI / 2, Math.PI / 2, 9.0, Vector3.Zero(), scene);\n        camera.minZ = 0.001;\n        camera.lowerRadiusLimit = 9.0;\n        camera.upperRadiusLimit = 9.0;\n        scene.activeCameras.push(camera);\n        camera.attachControl(canvas, true);\n\n        const light = new HemisphericLight('light1', Vector3.Up(), scene);\n        light.intensity = 0.7;\n\n        const background = new Layer('background',\n            '/assets/images/jeremy-perkins-uhjiu8FjnsQ-unsplash.jpg', scene);\n        background.isBackground = true;\n        background.texture.level = 0;\n        background.texture.wAng = .2;\n\n        loadResources(scene).then((loadedMeshes) => {\n            setResourcesLoaded(true);\n            loadCurrentShip(currentShip, scene, loadedMeshes);\n        });\n\n        scene.onBeforeRenderObservable.add(() => {\n            const deltaTimeInMillis = scene.getEngine().getDeltaTime();\n\n            _.each(scene.meshes, (mesh) => {\n                const rpm = 2;\n                mesh.rotation.y +=\n                    ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\n                mesh.rotation.z +=\n                    ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\n            });\n        });\n    };\n\n    const checkEnoughShipsAndDone = () => {\n        const notEnoughShips = currentCp < props.maxCp;\n        setNotEnoughShips(notEnoughShips);\n        if (!notEnoughShips) {\n            onDone();\n        }\n    };\n\n    const shipAdderClassName = `addOrRemoveShip addShip ${notEnoughShips ? 'highlightOverModal' : ''}`;\n\n    return (\n        <div className=\"ShipSelection\">\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"ship-selection\">\n                <Scene onSceneMount={onSceneMount}/>\n            </Engine>\n            {resourcesLoaded &&\n                <div className=\"ui\">\n                    <div className=\"uiElement shipName\">\n                        {Ships[currentShip].name}\n                    </div>\n                    <div className=\"uiElement sideBox shipStats\">\n                        <div>\n                            HP: {Ships[currentShip].stats.hp}\n                        </div>\n                        <div>\n                            Attack: {Ships[currentShip].stats.attack.base} - {Ships[currentShip].stats.attack.base + Ships[currentShip].stats.attack.variable}\n                        </div>\n                        <div>\n                            Defence: {Ships[currentShip].stats.defence}\n                        </div>\n                        <div>\n                            Speed: {Ships[currentShip].stats.speed}\n                        </div>\n                        <div>\n                            Range: {Ships[currentShip].stats.range}\n                        </div>\n                        <div>\n                            Accuracy: {Ships[currentShip].stats.accuracy}\n                        </div>\n                        <div>\n                            Agility: {Ships[currentShip].stats.agility}\n                        </div>\n                    </div>\n                    <div className=\"uiElement sideBox shipControls\">\n                        <div className={shipAdderClassName} onClick={addShip}>\n                            +\n                        </div>\n                        <div>\n                            Max CP: <span className=\"maxCp\">{props.maxCp}</span>\n                        </div>\n                        <div>\n                            CP Cost: {Ships[currentShip].stats.cp}\n                        </div>\n                        <div>\n                            Used ships: {selectedShips[currentShip] || 0}\n                        </div>\n                        <div>\n                            Used CP: {currentCp}\n                        </div>\n                        <div className=\"addOrRemoveShip removeShip\" onClick={removeShip}>\n                            -\n                        </div>\n                    </div>\n                    <div className=\"uiElement shipDescription\">\n                        {Ships[currentShip].description}\n                    </div>\n                    <div className=\"uiElement chevron left\" onClick={prevShip}/>\n                    <div className=\"uiElement chevron right\" onClick={nextShip}/>\n                    <div className=\"uiElement doneBox\" onClick={checkEnoughShipsAndDone}>\n                        DONE\n                    </div>\n                    <a className=\"miniLogoBox\" href=\"/\">\n                    </a>\n                    <div className=\"omegaTip\">\n                        <div className=\"title\">\n                            Ship Selection\n                        </div>\n                        <div className=\"explanation\">\n                            <div className=\"tip\">\n                                1. The amount of ships in a fight is determined by the Command Power (CP) of the Defender fleet.\n                            </div>\n                            <div className=\"tip\">\n                                2. Each ship costs a certain amount of CP.\n                            </div>\n                            <div className=\"tip\">\n                                3. The Attacker selects a fleet, the total CP of which can not exceed the total CP of the Defender.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n            {notEnoughShips &&\n                <div className=\"modal\">\n                    <div className=\"modal-popup\">\n                        <div className=\"modal-body\">\n                            <div className=\"modal-title\">You can still add ships to your fleet, Admiral!</div>\n                            <div>Tip: Add ships to your fleet with the + button to the right of ship portrait.</div>\n                        </div>\n                        <div className=\"modal-buttons\">\n                            <div className=\"modal-button left\" onClick={() => { setNotEnoughShips(false); }}>\n                                Back\n                            </div>\n                            <div className=\"modal-button right\" onClick={() => {\n                                setNotEnoughShips(false);\n                                onDone();\n                            }}>\n                                Start Anyway\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n","import { Vector3 } from '@babylonjs/core';\n\nexport const CommanderRarities = {\n    Common: 0,\n    Rare: 1,\n    Epic: 2,\n    Legendary: 3,\n};\n\nexport const CommanderRaritiesColors = {\n    0: '#73ffbe',\n    1: '#2196F3',\n    2: '#7B1FA2',\n    3: '#FFD740',\n};\n\nexport const commanderRarityToString = (rarity) => {\n    const lookup = {\n        0: 'Common',\n        1: 'Rare',\n        2: 'Epic',\n        3: 'Legendary'\n    };\n\n    return lookup[rarity] || '';\n};\n\nexport const Commanders = [\n    {\n        name: 'XT-101',\n        asset: 'assets/robot_5/',\n        description: 'Standard issue command robot issued to all Commanders. First and last iteration of its kind, provides slight bonuses to attack and defence.',\n        stats: {\n            attack: {\n                modifier: 2,\n                vs: 0,\n            },\n            defence: {\n                modifier: 2,\n                vs: 0,\n            },\n        },\n        scale: 10,\n        visuals: {\n            pickAnimations: ['Ball_To_Stand', 'Idle', 'Idle_Look_Back', 'Idle_Look_Side'],\n            positionOffset: new Vector3(0, 0.8, 0),\n        },\n        rarity: CommanderRarities.Common,\n    },\n    {\n        name: 'YT-106',\n        asset: 'assets/worker_12/',\n        description: 'Military grade command robot, in its sixth iteration. Smarter and more effective than the XT, is also known to be moody and disingenuous.',\n        stats: {\n            attack: {\n                modifier: 3,\n                vs: 1,\n            },\n            defence: {\n                modifier: 3,\n                vs: 1,\n            },\n        },\n        scale: 300,\n        visuals: {\n\n        },\n        rarity: CommanderRarities.Rare,\n    },\n    {\n        name: 'HV-12',\n        asset: 'assets/mech_walker/',\n        description: 'Since the entire series is classified, not much is known about the origins of this killing machine. It is clearly an assasination model.',\n        stats: {\n            attack: {\n                modifier: 4,\n            },\n            defence: {\n                modifier: 3,\n            },\n        },\n        scale: 300,\n        visuals: {\n            positionOffset: new Vector3(0, -1.2, 0),\n            rotation: new Vector3(0, 0, 0),\n        },\n        rarity: CommanderRarities.Epic,\n    },\n    {\n        name: 'Magnus',\n        asset: 'assets/trooper/',\n        description: 'Cyborgs are the ultimate combination of human intuition and robot processing power. While lacking in empathy, they make for formiddable commanders.',\n        stats: {\n            attack: {\n                modifier: 10,\n            },\n            defence: {\n                modifier: 5,\n            },\n        },\n        scale: 60,\n        visuals: {\n            positionOffset: new Vector3(0, -1.8, 0),\n        },\n        rarity: CommanderRarities.Legendary,\n    },\n];\n","import React, { useState } from 'react';\nimport _ from 'underscore';\nimport { Engine, Scene } from 'react-babylonjs';\nimport { Vector3, AssetsManager, Layer, ArcRotateCamera, HemisphericLight } from '@babylonjs/core';\nimport '@babylonjs/loaders';\nimport { Commanders, CommanderRaritiesColors, commanderRarityToString } from '../definitions/Commanders';\nimport { Ships } from '../definitions/Ships';\nimport { OmegaLoadingScreen } from '../common/OmegaLoadingScreen';\nimport './CommanderSelection.css';\n\nexport const CommanderSelection = (props) => {\n    const [ currentCommander, setCurrentCommander ] = useState(0);\n    const [ scene, setScene ] = useState(null);\n    const [ loadedMeshes, setLoadedMeshes ] = useState([]);\n    const [ resourcesLoaded, setResourcesLoaded ] = useState(false);\n\n    const nextCommander = () => {\n        const newCommander = currentCommander + 1;\n        const newCommanderSafe = newCommander >= Commanders.length ? 0 : newCommander;\n        setCurrentCommander(newCommanderSafe);\n        loadCurrentCommander(newCommanderSafe, scene);\n    };\n\n    const prevCommander = () => {\n        const newCommander = currentCommander - 1;\n        const newCommanderSafe = newCommander < 0 ? Commanders.length - 1 : newCommander;\n        setCurrentCommander(newCommanderSafe);\n        loadCurrentCommander(newCommanderSafe, scene);\n    };\n\n    const onDone = () => {\n        props.onDone(currentCommander);\n    };\n\n    const afterLoadCommander = (scene, newMeshes, commanderIndex) => {\n        newMeshes[0].position = Commanders[commanderIndex].visuals.positionOffset ||\n            Vector3.Zero();\n        newMeshes[0].rotation = Commanders[commanderIndex].visuals.rotation ||\n            new Vector3(0, Math.PI, 0);\n        newMeshes[0].scalingDeterminant = 0.001 * Commanders[commanderIndex].scale;\n        newMeshes[0].isVisible = false;\n    }\n\n    const loadResources = (scene) => {\n        return new Promise((resolve, reject) => {\n            const loadedMeshes = [];\n\n            const assetsManager = new AssetsManager(scene);\n            _.each(Commanders, (commander, index) => {\n                const task = assetsManager.addMeshTask(index, '',\n                    Commanders[index].asset,\n                    'scene.gltf');\n                task.onSuccess = (task) => {\n                    loadedMeshes[index] = task.loadedMeshes;\n                    afterLoadCommander(scene, task.loadedMeshes, index);\n                };\n            });\n\n            assetsManager.onFinish = (tasks) => {\n                setLoadedMeshes(loadedMeshes);\n                resolve(loadedMeshes);\n            };\n\n            assetsManager.load();\n        });\n    };\n\n    const loadCurrentCommander = (currentCommander, scene, loadedMeshesOverride) => {\n        const meshes = loadedMeshesOverride || loadedMeshes;\n\n        _.each(scene.meshes, (mesh) => {\n            mesh.isVisible = false;\n        });\n\n        _.each(meshes[currentCommander], (mesh) => {\n            mesh.isVisible = true;\n        });\n\n        _.invoke(_.filter(scene.animationGroups, (group) => {\n            return _.contains(Commanders[currentCommander].visuals.pickAnimations, group.name);\n        }), 'play', true);\n    };\n\n    const onSceneMount = (e) => {\n        const { canvas, scene } = e;\n        setScene(scene);\n\n        scene.getEngine().loadingScreen = new OmegaLoadingScreen();\n\n        const camera = new ArcRotateCamera('camera1',\n            Math.PI / 2, Math.PI / 2, 9.0, Vector3.Zero(), scene);\n        camera.minZ = 0.001;\n        camera.upperAlphaLimit = Math.PI / 2;\n        camera.lowerAlphaLimit = Math.PI / 2;\n        camera.upperBetaLimit = Math.PI / 2;\n        camera.lowerBetaLimit = Math.PI / 2;\n        camera.lowerRadiusLimit = 9.0;\n        camera.upperRadiusLimit = 9.0;\n        scene.activeCameras.push(camera);\n        camera.attachControl(canvas, true);\n\n        const light = new HemisphericLight('light1', Vector3.Up(), scene);\n        light.intensity = 0.7;\n\n        const background = new Layer('background',\n            '/assets/images/jeremy-perkins-uhjiu8FjnsQ-unsplash.jpg', scene);\n        background.isBackground = true;\n        background.texture.level = 0;\n        background.texture.wAng = .2;\n\n        loadResources(scene).then((loadedMeshes) => {\n            setResourcesLoaded(true);\n            loadCurrentCommander(currentCommander, scene, loadedMeshes);\n        });\n    };\n\n    const commanderRarityColor = CommanderRaritiesColors[Commanders[currentCommander].rarity];\n    const commanderRarityString = commanderRarityToString(Commanders[currentCommander].rarity);\n\n    const commanderAttackSuffix = _.has(Commanders[currentCommander].stats.attack, 'vs')\n        ? ` vs ${Ships[Commanders[currentCommander].stats.attack.vs].name}`\n        : '';\n    const commanderAttackString = `+${Commanders[currentCommander].stats.attack.modifier}${commanderAttackSuffix}`;\n\n    const commanderDefenceSuffix = _.has(Commanders[currentCommander].stats.defence, 'vs')\n        ? ` vs ${Ships[Commanders[currentCommander].stats.defence.vs].name}`\n        : '';\n    const commanderDefenceString = `+${Commanders[currentCommander].stats.defence.modifier}${commanderDefenceSuffix}`;\n\n\n    return (\n        <div className=\"CommanderSelection\">\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"ship-selection\">\n                <Scene onSceneMount={onSceneMount}/>\n            </Engine>\n            {resourcesLoaded &&\n                <div className=\"ui\">\n                    <div className=\"uiElement commanderName\" style={{color: commanderRarityColor}}>\n                        {Commanders[currentCommander].name}\n                    </div>\n                    <div className=\"uiElement sideBox commanderStats\">\n                        <div>\n                            Rarity: <span style={{color: commanderRarityColor}}>{commanderRarityString}</span>\n                        </div>\n                        <div>\n                            Level: 1\n                        </div>\n                        <div>\n                            Experience: 0/1000\n                        </div>\n                    </div>\n                    <div className=\"uiElement sideBox commanderControls\">\n                        <div>\n                            Attack:\n                            <div>{commanderAttackString}</div>\n                        </div>\n                        <div>\n                            Defence:\n                            <div>{commanderDefenceString}</div>\n                        </div>\n                    </div>\n                    <div className=\"uiElement commanderDescription\">\n                        {Commanders[currentCommander].description}\n                    </div>\n                    <div className=\"uiElement chevron left\" onClick={prevCommander}/>\n                    <div className=\"uiElement chevron right\" onClick={nextCommander}/>\n                    <div className=\"uiElement doneBox\" onClick={onDone}>\n                        DONE\n                    </div>\n                    <a className=\"miniLogoBox\" href=\"/\">\n                    </a>\n                    <div className=\"omegaTip\">\n                        <div className=\"title\">\n                            Commander Selection\n                        </div>\n                        <div className=\"explanation\">\n                            <div className=\"tip\">\n                                1. Each fleet in a fight is led by a Commander.\n                            </div>\n                            <div className=\"tip\">\n                                2. Commanders have different stats, skills, and rarity levels.\n                            </div>\n                            <div className=\"tip\">\n                                3. By winning in Ranked Combat, Commanders increase their experience and effectiveness.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport _ from 'underscore';\nimport { Engine, Scene } from 'react-babylonjs';\nimport { Vector3, Color3, Mesh, AssetsManager, StandardMaterial, ParticleHelper, Layer,\n    Animation, ArcRotateCamera, HemisphericLight } from '@babylonjs/core';\nimport '@babylonjs/loaders';\nimport { Ships } from '../definitions/Ships';\nimport { Commanders } from '../definitions/Commanders';\nimport { OmegaLoadingScreen } from '../common/OmegaLoadingScreen';\nimport './Combat.css';\n\nconst LASER_LENGTH_MS = 500;\nconst SHOOT_GAP_MS = 500;\n\n// props: selectionLhs, selectionRhs, commanderLhs, commanderRhs, result\nexport const Combat = (props) => {\n    const [ round, setRound ] = useState(0);\n    const [ showingResult, setShowingResult ] = useState(false);\n    const [ combatLog, setCombatLog ] = useState('');\n    const [ resourcesLoaded, setResourcesLoaded ] = useState(false);\n    let shipMeshesLhs = [];\n    let shipMeshesRhs = [];\n\n    const afterImportMeshes = (scene, newMeshes, currentShip,\n        basePosition, count, direction, isLhs) => {\n\n        newMeshes[0].position = new Vector3(basePosition + currentShip * direction, 0, -currentShip * 0.2);\n        newMeshes[0].rotation = new Vector3(Math.PI * 2, Math.PI / 2  * direction, Math.PI / 2 * -direction);\n        newMeshes[0].scalingDeterminant = 0.00013 * Ships[currentShip].scale;\n\n        _.each(newMeshes, (newMesh) => {\n            newMesh.material = new StandardMaterial(_.uniqueId(), scene);\n            newMesh.material.diffuseColor = isLhs\n                ? new Color3(0, 1, 0)\n                : new Color3(1, 1, 0)\n        });\n\n        if (isLhs) {\n            shipMeshesLhs[currentShip] = [ newMeshes[0] ];\n        } else {\n            shipMeshesRhs[currentShip] = [ newMeshes[0] ];\n        }\n\n        for (let i = 0; i < count - 1; i++) {\n            const clonedMesh = newMeshes[0].clone();\n\n            if (i % 2 === 0) {\n                clonedMesh.position.y -= (Math.floor(i / 2) + 1) * Ships[currentShip].combatScale;\n            } else {\n                clonedMesh.position.y += (Math.floor(i / 2) + 1) * Ships[currentShip].combatScale;\n            }\n\n            if (isLhs) {\n                shipMeshesLhs[currentShip].push(clonedMesh);\n            } else {\n                shipMeshesRhs[currentShip].push(clonedMesh);\n            }\n        }\n    };\n\n\n    const loadResources = (scene) => {\n        return new Promise((resolve, reject) => {\n            const assetsManager = new AssetsManager(scene);\n\n            _.each(props.selectionLhs, (count, index) => {\n                if (count > 0) {\n                    shipMeshesLhs[index] = [];\n                    const task = assetsManager.addMeshTask(index, '',\n                        Ships[index].asset,\n                        Ships[index].sceneFile || 'scene.gltf');\n                    task.onSuccess = (task) => {\n                        afterImportMeshes(scene, task.loadedMeshes, index, 10, count, 1, true);\n                    };\n                }\n            });\n\n            _.each(props.selectionRhs, (count, index) => {\n                if (count > 0) {\n                    shipMeshesRhs[index] = [];\n                    const task = assetsManager.addMeshTask(index, '',\n                        Ships[index].asset,\n                        'scene.gltf');\n                    task.onSuccess = (task) => {\n                        afterImportMeshes(scene, task.loadedMeshes, index, -10, count, -1, false);\n                    };\n                }\n            });\n\n            assetsManager.onFinish = (tasks) => {\n                resolve();\n            };\n\n            assetsManager.load();\n        });\n    };\n\n    const moveShips = (scene, move, isLhs) => {\n        const meshes = isLhs ? shipMeshesLhs[move.source] : shipMeshesRhs[move.source];\n\n        return Promise.all(_.map(meshes, (mesh) => {\n            return new Promise((resolve/*, reject*/) => {\n                const framerate = 10;\n                const slide = new Animation(_.uniqueId(), 'position.x', framerate,\n                    Animation.ANIMATIONTYPE_FLOAT, Animation.ANIMATIONLOOPMODE_CONSTANT);\n                const direction = isLhs ? -1 : 1;\n                const keyFrames = [\n                    {\n                        frame: 0,\n                        value: mesh.position.x,\n                    },\n                    {\n                        frame: framerate,\n                        value: mesh.position.x + Math.abs(move.targetPosition - mesh.position.x) * direction,\n                    },\n                    {\n                        frame: 2*framerate,\n                        value: move.targetPosition,\n                    }\n                ];\n                slide.setKeys(keyFrames);\n                mesh.animations = [ slide ];\n\n                scene.beginAnimation(mesh, 0, 2 * framerate, false, 2, resolve);\n            });\n        }));\n    };\n\n    const applyHpsToVisuals = (scene, target, isLhs, shipHpsLhs, shipHpsRhs) => {\n        const hpPerShip = Ships[target].stats.hp;\n        const hpsLeft = isLhs ? shipHpsRhs[target] : shipHpsLhs[target];\n        const shipsLeft = Math.max(Math.ceil(hpsLeft / hpPerShip), 0);\n        let meshes = isLhs ? shipMeshesRhs[target] : shipMeshesLhs[target];\n        const shipsToRemove = meshes.length - shipsLeft;\n\n        for (let removeIndex = 0; removeIndex < shipsToRemove; removeIndex++) {\n            const meshToRemove = meshes.shift();\n\n            // IMPROVEME only createasync once\n            ParticleHelper.CreateAsync('explosion', scene).then((set) => {\n                set.systems.forEach(s => {\n                    s.worldOffset = meshToRemove.position;\n                    s.disposeOnStop = true;\n                    s.maxSize = 0.01;\n                    s.minSize = 0.001;\n                });\n                set.systems = [ set.systems[0] ];\n                set.start();\n            });\n\n            meshToRemove.dispose();\n        }\n    };\n\n    let localLog = '';\n\n    const logAttack = (move, isLhs) => {\n        const prefix = isLhs ? '[Attacker]' : '[Defender]';\n        const newEntry = `${prefix} ${Ships[move.source].name} hits ${Ships[move.target].name} for ${move.damage} damage.`;\n        localLog = newEntry + '\\n' + localLog;\n        setCombatLog(localLog);\n    };\n\n    const logRoundStart = (round) => {\n        const newEntry = `Round ${round + 1} begins.\\n\\n`;\n        localLog = newEntry + localLog;\n        setCombatLog(localLog);\n    };\n\n    const showLaser = (scene, source, sourceMesh, targetMesh) => {\n        const mat = new StandardMaterial('laserMat', scene);\n        mat.alpha = 0.8;\n        mat.diffuseColor = Ships[source].visuals.beamColor;\n        mat.backFaceCulling = false;\n\n        const lines = Mesh.CreateTube('laser', [\n            sourceMesh.position,\n            targetMesh.position\n        ], Ships[source].visuals.beamWidth, 64, null, 0, scene, false, Mesh.FRONTSIDE);\n        lines.material = mat;\n        lines.convertToFlatShadedMesh();\n\n        setTimeout(() => {\n            lines.dispose();\n        }, LASER_LENGTH_MS);\n    };\n\n    const showAttacks = (scene, move, isLhs) => {\n        // for ships, each ship attacks next ship [0..n] meshes\n        const sourceMeshes = isLhs ? shipMeshesLhs : shipMeshesRhs;\n        const targetMeshes = isLhs ? shipMeshesRhs : shipMeshesLhs;\n        _.each(sourceMeshes[move.source], (sourceMesh, ind) => {\n            if (!targetMeshes[move.target] || !targetMeshes[move.target].length) {\n                return;\n            }\n\n            const targetMeshIndex = ind % targetMeshes[move.target].length;\n            const targetMesh = targetMeshes[move.target][targetMeshIndex];\n\n            showLaser(scene, move.source, sourceMesh, targetMesh);\n        });\n    };\n\n    const playMoves = (scene, moves, isLhs, shipHpsLhs, shipHpsRhs) => {\n        const _recursiveMover = (ind, mainResolver) => {\n            const move = moves[ind];\n\n            if (!move) {\n                return mainResolver();\n            }\n\n            let movePromise;\n            if (move.moveType === 'move') {\n                movePromise = moveShips(scene, move, isLhs);\n            } else {\n                movePromise = new Promise((resolve, reject) => {\n                    showAttacks(scene, move, isLhs);\n                    const shipHps = isLhs ? shipHpsRhs : shipHpsLhs;\n                    shipHps[move.target] -= move.damage;\n                    applyHpsToVisuals(scene, move.target, isLhs, shipHpsLhs,\n                        shipHpsRhs);\n                    logAttack(move, isLhs);\n\n                    setTimeout(resolve, SHOOT_GAP_MS);\n                });\n            }\n\n            movePromise.then(() => {\n                if (ind + 1 < moves.length) {\n                    _recursiveMover(ind + 1, mainResolver);\n                } else {\n                    mainResolver();\n                }\n            });\n        }\n\n        return new Promise((resolve, reject) => {\n            _recursiveMover(0, resolve);\n        });\n    };\n\n    const playRound = (scene, round, shipHpsLhs, shipHpsRhs) => { // recursive\n        if (round >= props.result.rounds) {\n            setShowingResult(true);\n            return;\n        }\n\n        setRound(round);\n        logRoundStart(round);\n\n        const lhsMoves = _.filter(props.result.lhs, (move) => {\n            return move.round === round && !_.isEmpty(move.moveType);\n        });\n        const rhsMoves = _.filter(props.result.rhs, (move) => {\n            return move.round === round && !_.isEmpty(move.moveType);\n        });\n\n        playMoves(scene, lhsMoves, true, shipHpsLhs, shipHpsRhs).then(() => {\n            playMoves(scene, rhsMoves, false, shipHpsLhs, shipHpsRhs).then(() => {\n                playRound(scene, round + 1, shipHpsLhs, shipHpsRhs);\n            });\n        })\n    };\n\n    const playCombat = (scene) => {\n        const shipHpsLhs = _.map(props.selectionLhs, (count, index) => {\n            return Ships[index].stats.hp * count;\n        });\n        const shipHpsRhs = _.map(props.selectionRhs, (count, index) => {\n            return Ships[index].stats.hp * count;\n        });\n\n        playRound(scene, 0, shipHpsLhs, shipHpsRhs);\n    };\n\n    const onSceneMount = (e) => {\n        const { canvas, scene } = e;\n\n        scene.getEngine().loadingScreen = new OmegaLoadingScreen();\n\n        const camera = new ArcRotateCamera('camera1',\n            Math.PI / 2, (Math.PI / 2) + Math.PI / 4, 18.5, Vector3.Zero(), scene);\n        camera.minZ = 0.001;\n        camera.lowerRadiusLimit = 18.5;\n        camera.upperRadiusLimit = 18.5;\n        scene.activeCameras.push(camera);\n        camera.attachControl(canvas, true);\n\n        const light = new HemisphericLight('light1', new Vector3(0, 0, 1), scene);\n        light.intensity = 0.7;\n\n        const background = new Layer('background',\n            '/assets/images/jeremy-perkins-uhjiu8FjnsQ-unsplash.jpg', scene);\n        background.isBackground = true;\n        background.texture.level = 0;\n        background.texture.wAng = .2;\n\n        loadResources(scene).then(() => {\n            setResourcesLoaded(true);\n            playCombat(scene);\n        })\n    };\n\n    const getWinnerString = () => {\n        const isDead = (shipHps) => {\n            return !_.find(shipHps, (shipHp) => shipHp > 0);\n        };\n\n        if (isDead(props.result.lhsHp)) {\n            return 'Defender Wins';\n        } else if (isDead(props.result.rhsHp)) {\n            return 'Attacker Wins';\n        } else {\n            return 'Draw';\n        }\n    }\n\n    const commanderAssetLhs = Commanders[props.commanderLhs].asset + 'thumb.png';\n    const commanderAssetRhs = Commanders[props.commanderRhs].asset + 'thumb.png';\n\n    return (\n        <div className=\"Combat\">\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"combat\">\n                <Scene onSceneMount={onSceneMount}/>\n            </Engine>\n            {resourcesLoaded &&\n                <div className=\"ui\">\n                    <div className=\"uiElement commander lhs\">\n                        <img alt=\"Commander\" src={commanderAssetLhs}>\n                        </img>\n                    </div>\n                    <div className=\"uiElement commander rhs\">\n                        <img alt=\"Commander\" src={commanderAssetRhs}>\n                        </img>\n                    </div>\n                    <div className=\"uiElement currentRound\">\n                        Round {round+1}\n                    </div>\n                    <div className=\"uiElement combatLog\">\n                        <pre>{combatLog}</pre>\n                    </div>\n                    <div className=\"uiElement doneBox\" onClick={() => { setShowingResult(true) }}>\n                        FINISH\n                    </div>\n                    <div className=\"miniLogoBox\"></div>\n                    {showingResult &&\n                        <div className=\"result\">\n                            <div className=\"resultDialog\">\n                                <div className=\"winner\">\n                                    {getWinnerString()}\n                                </div>\n                                <a className=\"exitButton\" href=\"/\">\n                                    EXIT\n                                </a>\n                            </div>\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    );\n}\n","import './OpponentSelection.css';\nimport React from 'react';\nimport _ from 'underscore';\n\n\n// props.opponents, props.onDone\nexport const OpponentSelection = (props) => {\n    const selectOpponent = (opponent) => {\n        props.onDone(opponent);\n    };\n\n    const renderOpponent = (opponent, ind) => {\n        return (\n            <div\n                key={ind}\n                className=\"mainMenuItem\"\n                onClick={() => { selectOpponent(opponent) }}\n            >\n                {opponent.name}\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"OpponentSelection\">\n            <div className=\"ui\">\n                <div className=\"mainTitle\">\n                </div>\n                <div className=\"mainMenu\">\n                    {_.map(props.opponents, renderOpponent)}\n                </div>\n                <div className=\"versionBox uiElement\">\n                    Version: 0.0.1 (c) celrisen.eth\n                </div>\n                <div className=\"ethBalance uiElement\">\n\n                </div>\n                <a className=\"miniLogoBox\" href=\"/\">\n                </a>\n            </div>\n        </div>\n    );\n};\n","import './Leaderboard.css';\nimport React from 'react';\nimport _ from 'underscore';\n\n\n// props.opponents, props.onDone\nexport const Leaderboard = (props) => {\n    const renderEntry = (entry, ind) => {\n        return (\n            <div\n                key={ind}\n                className=\"mainMenuItem\"\n            >\n                <div className=\"name\">{entry.name}</div>\n                <div className=\"address\">Address: {entry.player}</div>\n                <div className=\"wins\">Wins: {entry.wins.toNumber()}</div>\n                <div className=\"losses\">Losses: {entry.losses.toNumber()}</div>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"Leaderboard\">\n            <div className=\"ui\">\n                <div className=\"mainTitle\">\n                </div>\n                <div className=\"mainMenu\">\n                    {_.map(props.leaderboard, renderEntry)}\n                </div>\n                <div className=\"versionBox uiElement\">\n                    Version: 0.0.1 (c) celrisen.eth\n                </div>\n                <div className=\"ethBalance uiElement\">\n\n                </div>\n                <a className=\"miniLogoBox\" href=\"/\">\n                </a>\n            </div>\n        </div>\n    );\n};\n","import './ShowLogs.css';\nimport React from 'react';\nimport _ from 'underscore';\n\n\n// props.opponents, props.onDone\nexport const ShowLogs = (props) => {\n    const selectLog = (log) => {\n        props.onDone(log);\n    };\n\n    const renderLog = (log, ind) => {\n        return (\n            <div\n                key={ind}\n                className=\"mainMenuItem\"\n                onClick={() => { selectLog(log) }}\n            >\n                <span className=\"address\">{log.args[0]}</span>\n                <span className=\"vs\"> vs </span>\n                <span className=\"address\">{log.args[1]}</span>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"ShowLogs\">\n            <div className=\"ui\">\n                <div className=\"mainTitle\">\n                </div>\n                <div className=\"mainMenu\">\n                    {_.map(props.logs, renderLog)}\n                </div>\n                <div className=\"versionBox uiElement\">\n                    Version: 0.0.1 (c) celrisen.eth\n                </div>\n                <div className=\"ethBalance uiElement\">\n\n                </div>\n                <a className=\"miniLogoBox\" href=\"/\">\n                </a>\n            </div>\n        </div>\n    );\n};\n","import _ from 'underscore';\nimport { Ships } from './Ships';\n\n\nexport const GameEngine = (selectionLhs, selectionRhs) => {\n    const MAX_ROUNDS = 50;\n    const BOARD_SIZE = 15;\n\n    const shipPositionsLhs = [ 10, 11, 12, 13 ];\n    const shipPositionsRhs = [ -10, -11, -12, -13 ];\n\n    const shipMaxHpLhs = _.map(selectionLhs, (count, index) => {\n        return (Ships[index].stats.hp * count) || 0;\n    });\n    const shipMaxHpRhs = _.map(selectionRhs, (count, index) => {\n        return (Ships[index].stats.hp * count) || 0;\n    });\n    let shipHpsLhs = _.clone(shipMaxHpLhs);\n    let shipHpsRhs = _.clone(shipMaxHpRhs);\n\n    const isLhsDead = () => {\n        return !_.find(shipHpsLhs, (shipHp) => shipHp > 0);\n    };\n    const isRhsDead = () => {\n        return !_.find(shipHpsRhs, (shipHp) => shipHp > 0);\n    };\n\n    const getTarget = (currentShip, shipPositionsOwn, shipPositionsEnemy, shipHpsEnemy) => {\n        const position = shipPositionsOwn[currentShip];\n        const distances = _.map(shipPositionsEnemy, (positionTarget, enemyShip) => {\n            const distance = Math.abs(position - positionTarget);\n\n            if (shipHpsEnemy[enemyShip] <= 0) {\n                return Number.MAX_SAFE_INTEGER;\n            }\n            if (distance > Ships[currentShip].stats.range) {\n                return Number.MAX_SAFE_INTEGER;\n            }\n            return distance;\n        });\n        const min = _.min(distances);\n        const index = distances.indexOf(min);\n\n        return min === Number.MAX_SAFE_INTEGER ? null : index;\n    };\n\n    const getTargetLhs = (currentShip) => {\n        return getTarget(currentShip, shipPositionsLhs, shipPositionsRhs, shipHpsRhs);\n    };\n\n    const getTargetRhs = (currentShip) => {\n        return getTarget(currentShip, shipPositionsRhs, shipPositionsLhs, shipHpsLhs);\n    };\n\n    const getRandomInt = (max) => {\n        return Math.floor(Math.random() * Math.floor(max));\n    };\n\n    const calculateDamage = (source, target, sourceHp, sourceMaxHp) => {\n        const attack = Ships[source].stats.attack.base +\n            getRandomInt(Ships[source].stats.attack.variable);\n        const defence = Ships[target].stats.defence;\n        const accuracy = 100 - Ships[target].stats.agility;\n        const damage = (attack - defence) * accuracy * (sourceHp / sourceMaxHp);\n\n        const sourceShipsCount = Math.ceil(sourceHp / Ships[source].stats.hp);\n        const capDamage = sourceShipsCount * Ships[target].stats.hp;\n\n        return Math.min(Math.floor(Math.max(0, damage)), capDamage);\n    };\n\n    const isPositionFree = (position) => {\n        if (Math.abs(position) > BOARD_SIZE) {\n            return false;\n        }\n\n        return !_.find(shipPositionsLhs, (positionIter, ind) => {\n            return positionIter === position && shipHpsLhs[ind] > 0;\n        }) && !_.find(shipPositionsRhs, (positionIter, ind) => {\n            return positionIter === position && shipHpsRhs[ind] > 0;\n        });\n    };\n\n    const moveShips = (shipPositions, source, direction) => {\n        const speed = Ships[source].stats.speed;\n\n        for (let speedCheck = speed; speedCheck > 0; speedCheck--) {\n            const proposedPosition = shipPositions[source] + direction * speedCheck;\n            if (isPositionFree(proposedPosition)) {\n                shipPositions[source] = proposedPosition;\n                break;\n            }\n        }\n\n        return shipPositions[source];\n    };\n\n    const moveShipLhs = (source) => {\n        return moveShips(shipPositionsLhs, source, -1);\n    };\n\n    const moveShipRhs = (source) => {\n        return moveShips(shipPositionsRhs, source, 1);\n    };\n\n    const lhsMoves = [], rhsMoves = [];\n    const logShoot = (round, moves, source, target, damage) => {\n        moves.push({\n            moveType: 'shoot',\n            round,\n            source,\n            target,\n            damage,\n        });\n    };\n\n    const logMove = (round, moves, source, targetPosition) => {\n        moves.push({\n            moveType: 'move',\n            round,\n            source,\n            targetPosition,\n        });\n    };\n\n    const logLhsShoot = (round, source, target, damage) => {\n        logShoot(round, lhsMoves, source, target, damage);\n    };\n\n    const logLhsMove = (round, source, targetPosition) => {\n        logMove(round, lhsMoves, source, targetPosition);\n    };\n\n    const logRhsShoot = (round, source, target, damage) => {\n        logShoot(round, rhsMoves, source, target, damage);\n    };\n\n    const logRhsMove = (round, source, targetPosition) => {\n        logMove(round, rhsMoves, source, targetPosition);\n    };\n\n    let round;\n    for (round = 0; round < MAX_ROUNDS && !isLhsDead() && !isRhsDead(); round++) {\n        // Left turn\n        for (let currentShip = 0; currentShip < Ships.length; currentShip++) {\n            if (shipHpsLhs[currentShip] > 0) {\n                const target = getTargetLhs(currentShip);\n                if (target || target === 0) { // Shoot\n                    const damage = calculateDamage(currentShip, target,\n                        shipHpsLhs[currentShip], shipMaxHpLhs[currentShip]);\n                    shipHpsRhs[target] -= damage;\n                    logLhsShoot(round, currentShip, target, damage);\n                } else { // Move\n                    moveShipLhs(currentShip);\n                    logLhsMove(round, currentShip, shipPositionsLhs[currentShip]);\n                }\n            }\n        }\n\n        // Right turn\n        for (let currentShip = 0; currentShip < Ships.length; currentShip++) {\n            if (shipHpsRhs[currentShip] > 0) {\n                const target = getTargetRhs(currentShip);\n                if (target || target === 0) { // Shoot\n                    const damage = calculateDamage(currentShip, target,\n                        shipHpsRhs[currentShip], shipMaxHpRhs[currentShip]);\n                    shipHpsLhs[target] -= damage;\n                    logRhsShoot(round, currentShip, target, damage);\n                } else { // Move\n                    moveShipRhs(currentShip);\n                    logRhsMove(round, currentShip, shipPositionsRhs[currentShip]);\n                }\n            }\n        }\n    }\n\n    return {\n        lhs: lhsMoves,\n        rhs: rhsMoves,\n        lhsHp: shipHpsLhs,\n        rhsHp: shipHpsRhs,\n        rounds: round,\n    };\n};\n","import './App.css';\nimport React, { Component } from 'react';\nimport { ethers } from 'ethers';\nimport * as TrinitySDK from \"@elastosfoundation/trinity-dapp-sdk\";\nimport { ShipSelection } from './scenes/ShipSelection';\nimport { CommanderSelection } from './scenes/CommanderSelection';\nimport { Combat } from './scenes/Combat';\nimport { OpponentSelection } from './ui/OpponentSelection';\nimport { Leaderboard } from './ui/Leaderboard';\nimport { ShowLogs } from './ui/ShowLogs';\nimport { GameEngine } from './definitions/GameEngine';\nimport { Ships } from './definitions/Ships';\nimport _ from 'underscore';\n\n\nconst Modes = {\n    MainScreen: 0,\n    ShipSelection: 1,\n    CommanderSelection: 2,\n    CommanderPreview: 3,\n    Combat: 4,\n    OpponentSelection: 5,\n    ShowLogs: 6,\n    Leaderboard: 7,\n};\n\nexport default class OmegaApp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.defaultLoadedState = {\n            mode: Modes.MainScreen,\n            loading: false,\n            trainingSelfSelection: null,\n            trainingResult: null,\n            trainingSelfCommander: null,\n            trainingOpponent: null,\n            trainingOpponentSelection: null,\n            trainingOpponentCommander: null,\n            trainingCp: null,\n            defenders: null,\n            settingDefence: false,\n            settingAttack: false,\n        };\n\n        this.defaultUnloadedState = {\n            ownAccount: null,\n            web3Loaded: false,\n            gameEngineContract: null,\n            gameManagerContract: null,\n        };\n\n        this.state = {\n            ...this.defaultLoadedState,\n            ...this.defaultUnloadedState,\n        };\n    }\n\n    shipSelectionDone(selection) {\n        const trainingResult = !this.state.settingDefence &&\n            GameEngine(selection, this.state.trainingOpponentSelection);\n\n        this.setState({\n            mode: Modes.CommanderSelection,\n            trainingSelfSelection: selection,\n            trainingResult,\n        });\n    }\n\n    async commanderSelectionDone(commander) {\n        if (this.state.settingDefence) {\n            this.setState({\n                loading: true,\n            });\n\n            await this.state.gameManagerContract.registerDefence(\n                this.state.trainingSelfSelection,\n                commander,\n                this.state.ownAccount\n            );\n\n            this.setState(this.defaultLoadedState);\n        } else if (this.state.settingAttack) {\n            this.setState({\n                loading: true,\n            });\n\n            await this.state.gameManagerContract.attack(\n                this.state.trainingOpponent,\n                this.state.trainingSelfSelection,\n                commander\n            );\n\n            this.setState(this.defaultLoadedState);\n        } else {\n            this.setState({\n                mode: Modes.Combat,\n                trainingSelfCommander: commander,\n            });\n        }\n    }\n\n    commanderPreviewDone() {\n        this.setState(this.defaultLoadedState);\n    }\n\n    opponentSelectionDone(opponent) {\n        const trainingOpponentSelection = opponent.defenceSelection;\n\n        this.setState({\n            mode: Modes.ShipSelection,\n            settingAttack: true,\n            trainingOpponent: opponent.player,\n            trainingOpponentSelection,\n            trainingOpponentCommander: opponent.commander,\n            trainingCp: this._selectionToCp(trainingOpponentSelection),\n        });\n    }\n\n    _selectionToCp(selection) {\n        return _.reduce(selection, (memo, num, index) => {\n            return memo + (num || 0) * Ships[index].stats.cp;\n        }, 0);\n    }\n\n    training() {\n        const trainingOpponentSelection = [25, 18, 16, 6];\n\n        this.setState({\n            mode: Modes.ShipSelection,\n            trainingOpponentSelection,\n            trainingCp: this._selectionToCp(trainingOpponentSelection),\n        });\n    }\n\n    commanders() {\n        this.setState({\n            mode: Modes.CommanderPreview,\n        });\n    }\n\n    defend() {\n        const trainingOpponentSelection = [25, 18, 16, 6];\n\n        this.setState({\n            mode: Modes.ShipSelection,\n            settingDefence: true,\n            trainingOpponentSelection,\n            trainingCp: this._selectionToCp(trainingOpponentSelection),\n        });\n    }\n\n    async showLogs() {\n        const filter = this.state.gameManagerContract.filters.FightComplete();\n        filter.fromBlock = this.state.provider.getBlockNumber().then((b) => b - 10000);\n        filter.toBlock = 'latest';\n        filter.attacker = this.state.ownAccount;\n\n        this.setState({\n            loading: true,\n        });\n\n        const logs = await this.state.provider.getLogs(filter);\n        const logsParsed = _.map(logs, (log) => {\n            return this.state.gameManagerContract.interface.parseLog(log);\n        });\n\n        this.setState({\n            mode: Modes.ShowLogs,\n            logs: logsParsed,\n            loading: false,\n        });\n    }\n\n    logSelectionDone(log) {\n        const result = log.args[2];\n\n        const _parseMoves = (moves) => {\n            return _.map(moves, (move) => {\n                return {\n                    ...move,\n                    damage: move.damage.toNumber(),\n                };\n            });\n        };\n\n        const _parseHp = (hp) => {\n            return _.map(hp, (hpInst) => {\n                return hpInst.toNumber();\n            });\n        }\n\n        const resultJson = {\n            lhs: _parseMoves(result.lhs),\n            rhs: _parseMoves(result.rhs),\n            lhsHp: _parseHp(result.lhsHp),\n            rhsHp: _parseHp(result.rhsHp),\n            rounds: result.rounds,\n            selectionLhs: result.selectionLhs,\n            selectionRhs: result.selectionRhs,\n            commanderLhs: result.commanderLhs,\n            commanderRhs: result.commanderRhs,\n        };\n\n        this.setState({\n            mode: Modes.Combat,\n            trainingSelfSelection: resultJson.selectionLhs,\n            trainingSelfCommander: resultJson.commanderLhs,\n            trainingOpponentSelection: resultJson.selectionRhs,\n            trainingResult: resultJson,\n        });\n    }\n\n    async attack() {\n        this.setState({\n            loading: true,\n        });\n\n        const defenders = await this.state.gameManagerContract.getAllDefenders();\n\n        this.setState({\n            mode: Modes.OpponentSelection,\n            defenders,\n            loading: false,\n        });\n    }\n\n    async leaderboard() {\n        this.setState({\n            loading: true,\n        });\n\n        const leaderboard = await this.state.gameManagerContract.getLeaderboard();\n\n        this.setState({\n            mode: Modes.Leaderboard,\n            leaderboard,\n            loading: false,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.mode === Modes.MainScreen &&\n                    <div className=\"mainScreen ui\">\n                        <div className=\"mainTitle\">\n                        </div>\n                        <div className=\"mainMenu\">\n                            <div className=\"mainMenuItem\" onClick={this.training.bind(this)}>\n                                TRAINING\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.commanders.bind(this)}>\n                                COMMANDERS\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.showLogs.bind(this)}>\n                                LOGS\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.defend.bind(this)}>\n                                DEFENCE\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.attack.bind(this)}>\n                                ATTACK\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.leaderboard.bind(this)}>\n                                LEADERBOARD\n                            </div>\n                        </div>\n                        <div className=\"versionBox uiElement\">\n                            Version: 0.0.1 (c) celrisen.eth\n                        </div>\n                    </div>\n                }\n                {this.state.mode === Modes.ShipSelection &&\n                    <ShipSelection maxCp={this.state.trainingCp} onDone={this.shipSelectionDone.bind(this)}/>\n                }\n                {this.state.mode === Modes.CommanderSelection &&\n                    <CommanderSelection onDone={this.commanderSelectionDone.bind(this)}/>\n                }\n                {this.state.mode === Modes.CommanderPreview &&\n                    <CommanderSelection onDone={this.commanderPreviewDone.bind(this)}/>\n                }\n                {this.state.mode === Modes.Combat &&\n                    <Combat selectionLhs={this.state.trainingSelfSelection}\n                        selectionRhs={this.state.trainingOpponentSelection}\n                        commanderLhs={this.state.trainingSelfCommander}\n                        commanderRhs={0}\n                        result={this.state.trainingResult}\n                    />\n                }\n                {this.state.mode === Modes.OpponentSelection &&\n                    <OpponentSelection opponents={this.state.defenders}\n                        onDone={this.opponentSelectionDone.bind(this)}\n                    />\n                }\n                {this.state.mode === Modes.ShowLogs &&\n                    <ShowLogs logs={this.state.logs} onDone={this.logSelectionDone.bind(this)}/>\n                }\n                {this.state.mode === Modes.Leaderboard &&\n                    <Leaderboard leaderboard={this.state.leaderboard}/>\n                }\n                <div\n                    id=\"omegaLoadingScreen\"\n                    style={this.state.web3Loaded && !this.state.loading ? {display: 'none'} : {}}>\n                    <div className=\"logo\"/>\n                    <div className=\"progressOuter progress-line\"/>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this._initWeb3();\n    }\n\n    async _initWeb3() {\n        // const provider = new TrinitySDK.Ethereum.Web3.Providers.TrinityWeb3Provider();\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n\n        // const provider = new Web3(window.ethereum);\n        const accounts = await window.ethereum.send('eth_requestAccounts');\n\n        this.setState({\n            provider,\n            ownAccount: accounts.result[0],\n            signer,\n        }, () => {\n            this._loadContracts(signer);\n        });\n    }\n\n    _loadContracts(signer) {\n        const gameEngineJson = require('./abi/GameEngine.json');\n        const gameEngineContractAddress = '0x39a3c0cDddF3f46A1b7462e911508E20230e6034';\n        const gameEngineContract = new ethers.Contract(gameEngineContractAddress, gameEngineJson, signer);\n\n        const gameManagerJson = require('./abi/GameManager.json');\n        const gameManagerContractAddress = '0xc7ed5147cd9C348fdd3Fa954c3391597873ec010';\n        const gameManagerContract = new ethers.Contract(gameManagerContractAddress, gameManagerJson, signer);\n\n        this.setState({\n            gameEngineContract,\n            gameManagerContract,\n            web3Loaded: true,\n        });\n    }\n}\n\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { apps, flash, send } from 'ionicons/icons';\nimport OmegaApp from './OmegaApp';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\ndeclare let appManager: AppManagerPlugin.AppManager;\n\nconst App: React.FC = () => {\n  document.addEventListener('deviceready', () => {\n    appManager.setVisible('show');\n    window.screen.orientation.lock('landscape');\n  }, false);\n\n  return <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route path=\"/\" component={OmegaApp} exact={true} />\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n};\n\nexport default App;\n","import * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nSentry.init({\n  dsn: \"https://adf39eeb31a04f4c9e2ae1613a647396@o509705.ingest.sentry.io/5604612\",\n  debug: true,\n  autoSessionTracking: true,\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}