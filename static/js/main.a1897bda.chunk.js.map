{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm/legacy lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","definitions/Ships.js","common/OmegaLoadingScreen.js","scenes/ShipSelection.js","definitions/Commanders.js","scenes/CommanderSelection.js","scenes/Combat.js","ui/OpponentSelection.js","ui/Leaderboard.js","ui/ShowLogs.js","common/FastProvider.js","OmegaApp.js","App.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Ships","name","asset","description","stats","cp","hp","attack","base","variable","defence","speed","range","agility","scale","combatScale","visuals","beamColor","Color3","beamWidth","Math","PI","OmegaLoadingScreen","loadingScreenDiv","window","document","getElementById","style","display","getElementsByClassName","classList","add","remove","getCurrentCP","selectedShips","_","reduce","memo","num","index","ShipSelection","props","useState","currentShip","setCurrentShip","clone","defaultShips","setSelectedShips","currentCp","setCurrentCp","scene","setScene","loadedMeshes","setLoadedMeshes","resourcesLoaded","setResourcesLoaded","notEnoughShips","setNotEnoughShips","onDone","loadResources","reject","assetsManager","AssetsManager","each","ship","addMeshTask","onSuccess","task","newMeshes","shipIndex","position","Vector3","Zero","rotation","scalingDeterminant","isVisible","onFinish","tasks","load","loadCurrentShip","loadedMeshesOverride","meshes","mesh","className","antialias","adaptToDeviceRatio","canvasId","onSceneMount","canvas","getEngine","loadingScreen","camera","ArcRotateCamera","minZ","lowerRadiusLimit","upperRadiusLimit","activeCameras","push","attachControl","HemisphericLight","Up","intensity","background","Layer","isBackground","texture","level","wAng","onBeforeRenderObservable","deltaTimeInMillis","getDeltaTime","y","z","accuracy","onClick","cost","maxCp","newShip","newShipSafe","length","href","CommanderRarities","CommanderRaritiesColors","0","1","2","3","Commanders","modifier","vs","pickAnimations","positionOffset","rarity","CommanderSelection","currentCommander","setCurrentCommander","commander","commanderIndex","loadCurrentCommander","invoke","filter","animationGroups","group","contains","commanderRarityColor","commanderRarityString","commanderAttackSuffix","has","commanderAttackString","commanderDefenceSuffix","commanderDefenceString","upperAlphaLimit","lowerAlphaLimit","upperBetaLimit","lowerBetaLimit","color","newCommander","newCommanderSafe","Combat","round","setRound","showingResult","setShowingResult","combatLog","setCombatLog","shipMeshesLhs","shipMeshesRhs","afterImportMeshes","basePosition","count","direction","isLhs","newMesh","material","StandardMaterial","uniqueId","diffuseColor","i","clonedMesh","floor","localLog","showAttacks","move","sourceMeshes","targetMeshes","source","sourceMesh","ind","target","targetMeshIndex","targetMesh","mat","alpha","backFaceCulling","lines","Mesh","CreateTube","FRONTSIDE","convertToFlatShadedMesh","setTimeout","dispose","showLaser","playMoves","moves","shipHpsLhs","shipHpsRhs","_recursiveMover","mainResolver","movePromise","moveType","all","slide","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CONSTANT","keyFrames","frame","value","x","abs","targetPosition","setKeys","animations","beginAnimation","moveShips","damage","hpPerShip","hpsLeft","shipsLeft","max","ceil","shipsToRemove","removeIndex","meshToRemove","shift","ParticleHelper","CreateAsync","set","systems","forEach","s","worldOffset","disposeOnStop","maxSize","minSize","start","applyHpsToVisuals","newEntry","logAttack","playRound","result","rounds","logRoundStart","lhsMoves","lhs","rhsMoves","rhs","commanderAssetLhs","commanderLhs","commanderAssetRhs","commanderRhs","selectionLhs","sceneFile","selectionRhs","playCombat","alt","src","lhsDead","rhsDead","OpponentSelection","opponents","reverse","opponent","key","selectOpponent","ethers","utils","parseBytes32String","Leaderboard","leaderboard","sort","wins","toNumber","entry","player","losses","ShowLogs","addressToName","address","findWhere","logs","log","selectLog","args","FastProvider","tx","gas","providers","Web3Provider","Modes","TRAINING_SELECTION","OmegaApp","defaultLoadedState","mode","loading","trainingSelfSelection","trainingResult","trainingSelfCommander","trainingOpponent","trainingOpponentSelection","trainingOpponentCommander","trainingCp","defenders","settingDefence","settingAttack","defaultUnloadedState","ownAccount","web3Loaded","ethBalance","blockNumber","newOmegaContract","hasUnseenFights","playerName","localStorage","getItem","state","selection","this","setState","registerDefence","formatBytes32String","wait","seed","random","Number","MAX_SAFE_INTEGER","replay","defenceSelection","_selectionToCp","setItem","getOwnDefence","myDefence","isInitialised","provider","filters","FightComplete","attacker","on","_checkBalance","filterAttacker","fromBlock","getBlockNumber","b","toBlock","filterDefender","defender","getLogs","logsAttacker","logsDefender","concat","logsParsed","interface","parseLog","getAllDefenders","metaResult","_parseHp","hpInst","resultJson","lhsHp","rhsHp","getLeaderboard","logsClassName","ethBalanceString","_formatBalance","formatEther","autoCorrect","type","onChange","handlePlayerNameChange","bind","training","commanders","showLogs","defend","shipSelectionDone","commanderSelectionDone","commanderPreviewDone","opponentSelectionDone","logSelectionDone","_initWeb3","balance","parseFloat","toFixed","toString","ethereum","signer","getSigner","send","accounts","_loadContracts","getBalance","newOmegaJson","require","Contract","attachBlockchainEvents","Component","App","addEventListener","titleBarManager","setVisibility","appManager","setVisible","screen","orientation","lock","path","component","exact","Sentry","dsn","debug","autoSessionTracking","tracesSampleRate","ReactDOM","render"],"mappings":"6IAAA,IAAIA,EAAM,CACT,2CAA4C,CAC3C,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAi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","file":"static/js/main.a1897bda.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t591,\n\t\t43\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t592,\n\t\t44\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t593,\n\t\t45\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t594,\n\t\t24\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t595,\n\t\t25\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t596,\n\t\t11\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t597,\n\t\t12\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t598,\n\t\t46\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t599,\n\t\t47\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t600,\n\t\t48\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t601,\n\t\t49\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t602,\n\t\t81\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t603,\n\t\t82\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t604,\n\t\t50\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t605,\n\t\t51\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t606,\n\t\t52\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t607,\n\t\t53\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t608,\n\t\t54\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t609,\n\t\t55\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t610,\n\t\t56\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t611,\n\t\t57\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t612,\n\t\t83\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t613,\n\t\t20\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t614,\n\t\t21\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t615,\n\t\t58\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t616,\n\t\t59\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t617,\n\t\t84\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t618,\n\t\t39\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t619,\n\t\t40\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t620,\n\t\t60\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t621,\n\t\t61\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t622,\n\t\t62\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t623,\n\t\t63\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t624,\n\t\t64\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t625,\n\t\t65\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t626,\n\t\t26\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t627,\n\t\t27\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t628,\n\t\t18\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t629,\n\t\t19\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t630,\n\t\t14\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t631,\n\t\t15\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t632,\n\t\t13\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t633,\n\t\t16\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t634,\n\t\t17\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t635,\n\t\t66\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t636,\n\t\t67\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t637,\n\t\t32\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t638,\n\t\t33\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t639,\n\t\t68\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t640,\n\t\t69\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t641,\n\t\t41\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t642,\n\t\t42\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t643,\n\t\t37\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t644,\n\t\t38\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t645,\n\t\t85\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t646,\n\t\t70\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t647,\n\t\t28\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t648,\n\t\t29\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t649,\n\t\t71\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t650,\n\t\t72\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t651,\n\t\t34\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t652,\n\t\t35\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t653,\n\t\t86\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t654,\n\t\t87\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t655,\n\t\t73\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t656,\n\t\t88\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t657,\n\t\t89\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t658,\n\t\t74\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t659,\n\t\t75\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t660,\n\t\t36\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t661,\n\t\t76\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t662,\n\t\t77\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t663,\n\t\t78\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t664,\n\t\t30\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t665,\n\t\t31\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t666,\n\t\t22\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t667,\n\t\t23\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t668,\n\t\t90\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 530;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t672,\n\t\t98\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 532;\nmodule.exports = webpackAsyncContext;","import { Color3 } from '@babylonjs/core';\n\nexport const Ships = [\n    {\n        name: 'Frigate',\n        asset: 'assets/frigate/',\n        description: 'Cheap, quick and agile, the frigate can be used as a quick strike weapon, able to reach enemy lines quickest. Can not withstand much heat though.',\n        stats: {\n            cp: 1,\n            hp: 1000,\n            attack: {\n                base: 30,\n                variable: 5,\n            },\n            defence: 2,\n            speed: 6,\n            range: 6,\n            agility: 25,\n        },\n        scale: 1,\n        combatScale: 0.6,\n        visuals: {\n            beamColor: new Color3(0, 1, 0),\n            beamWidth: Math.PI / 256,\n        },\n    },\n    {\n        name: 'Cruiser',\n        asset: 'assets/cruiser/',\n        description: 'As lightest of the heavier ships, the cruiser retains some of the speed and maneuverability of the frigate while offering big improvements in the hull and weaponry.',\n        stats: {\n            cp: 4,\n            hp: 4000,\n            attack: {\n                base: 100,\n                variable: 20,\n            },\n            defence: 12,\n            speed: 4,\n            range: 8,\n            agility: 15,\n        },\n        scale: 6,\n        combatScale: 0.4,\n        visuals: {\n            beamColor: new Color3(0.2, 0.2, 1),\n            beamWidth: Math.PI / 96,\n        },\n    },\n    {\n        name: 'Destroyer',\n        asset: 'assets/destroyer/',\n        description: 'The destroyer is an effective killing machine, providing both effective support and serving as an artillery line raining heavy damage on enemy ships.',\n        stats: {\n            cp: 5,\n            hp: 5000,\n            attack: {\n                base: 130,\n                variable: 10,\n            },\n            defence: 15,\n            speed: 3,\n            range: 10,\n            agility: 10,\n        },\n        scale: 9,\n        combatScale: 0.5,\n        visuals: {\n            beamColor: new Color3(1, 1, 1),\n            beamWidth: Math.PI / 96,\n        },\n    },\n    {\n        name: 'Battleship',\n        asset: 'assets/battleship/',\n        description: 'Fitted with state of the art weaponry and protection, the battleship is the ultimate fighting force in the galaxy.',\n        stats: {\n            cp: 15,\n            hp: 10000,\n            attack: {\n                base: 200,\n                variable: 5,\n            },\n            defence: 20,\n            speed: 2,\n            range: 12,\n            agility: 0,\n        },\n        scale: 12,\n        combatScale: 0.6,\n        visuals: {\n            beamColor: new Color3(1, 0, 1),\n            beamWidth: Math.PI / 64,\n        },\n    },\n];\n","export class OmegaLoadingScreen {\n    displayLoadingUI() {\n        const loadingScreenDiv = window.document.getElementById('omegaLoadingScreen');\n        loadingScreenDiv.style.display = 'block';\n\n        const statusDiv = loadingScreenDiv.getElementsByClassName('status')[0];\n        statusDiv.classList.add('loadingAssets');\n    }\n\n    hideLoadingUI() {\n        const loadingScreenDiv = window.document.getElementById('omegaLoadingScreen');\n        loadingScreenDiv.style.display = 'none';\n\n        const statusDiv = loadingScreenDiv.getElementsByClassName('status')[0];\n        statusDiv.classList.remove('loadingAssets');\n    }\n}\n","import React, { useState } from 'react';\nimport _ from 'underscore';\nimport { Engine, Scene } from 'react-babylonjs';\nimport { Vector3, AssetsManager, Layer, ArcRotateCamera, HemisphericLight } from '@babylonjs/core';\nimport '@babylonjs/loaders';\nimport { Ships } from '../definitions/Ships';\nimport { OmegaLoadingScreen } from '../common/OmegaLoadingScreen';\nimport './ShipSelection.css';\n\nconst getCurrentCP = (selectedShips) => {\n    return _.reduce(selectedShips, (memo, num, index) => {\n        return memo + (num || 0) * Ships[index].stats.cp;\n    }, 0);\n};\n\nexport const ShipSelection = (props) => {\n    const [ currentShip, setCurrentShip ] = useState(0);\n    const [ selectedShips, setSelectedShips ] = useState(_.clone(props.defaultShips));\n    const [ currentCp, setCurrentCp ] = useState(getCurrentCP(props.defaultShips));\n    const [ scene, setScene ] = useState(null);\n    const [ loadedMeshes, setLoadedMeshes ] = useState([]);\n    const [ resourcesLoaded, setResourcesLoaded ] = useState(false);\n    const [ notEnoughShips, setNotEnoughShips ] = useState(false);\n\n    const nextShip = () => {\n        const newShip = currentShip + 1;\n        const newShipSafe = newShip >= Ships.length ? 0 : newShip;\n        setCurrentShip(newShipSafe);\n        loadCurrentShip(newShipSafe, scene);\n    };\n\n    const prevShip = () => {\n        const newShip = currentShip - 1;\n        const newShipSafe = newShip < 0 ? Ships.length - 1 : newShip;\n        setCurrentShip(newShipSafe);\n        loadCurrentShip(newShipSafe, scene);\n    };\n\n    const addShip = () => {\n        const cost = Ships[currentShip].stats.cp;\n        const currentCp = getCurrentCP(selectedShips);\n        if (currentCp + cost <= props.maxCp) {\n            selectedShips[currentShip] = (selectedShips[currentShip] || 0) + 1;\n            setSelectedShips(selectedShips); // TODO NEEDED?\n            setCurrentCp(getCurrentCP(selectedShips));\n        }\n\n        setNotEnoughShips(false);\n    };\n\n    const removeShip = () => {\n        if (selectedShips[currentShip] > 0) {\n            selectedShips[currentShip]--;\n            setSelectedShips(selectedShips); // TODO NEEDED?\n            setCurrentCp(getCurrentCP(selectedShips));\n        }\n    };\n\n    const onDone = () => {\n        props.onDone(selectedShips);\n    };\n\n    const afterLoadShip = (scene, newMeshes, shipIndex) => {\n        newMeshes[0].position = Vector3.Zero();\n        newMeshes[0].rotation = new Vector3(-Math.PI / 12, Math.PI, 0);\n        newMeshes[0].scalingDeterminant = 0.001 * Ships[shipIndex].scale;\n        newMeshes[0].isVisible = false;\n    };\n\n    const loadResources = (scene) => {\n        return new Promise((resolve, reject) => {\n            const loadedMeshes = [];\n\n            const assetsManager = new AssetsManager(scene);\n            _.each(Ships, (ship, index) => {\n                const task = assetsManager.addMeshTask(index, '',\n                    Ships[index].asset,\n                    'scene.gltf');\n                task.onSuccess = (task) => {\n                    loadedMeshes[index] = task.loadedMeshes;\n                    afterLoadShip(scene, task.loadedMeshes, index);\n                };\n            });\n\n            assetsManager.onFinish = (tasks) => {\n                setLoadedMeshes(loadedMeshes);\n                resolve(loadedMeshes);\n            };\n\n            assetsManager.load();\n        });\n    };\n\n    const loadCurrentShip = (currentShip, scene, loadedMeshesOverride) => {\n        const meshes = loadedMeshesOverride || loadedMeshes;\n\n        _.each(scene.meshes, (mesh) => {\n            mesh.isVisible = false;\n        });\n\n        _.each(meshes[currentShip], (mesh) => {\n            mesh.isVisible = true;\n        });\n    };\n\n    const onSceneMount = (e) => {\n        const { canvas, scene } = e;\n        setScene(scene);\n\n        scene.getEngine().loadingScreen = new OmegaLoadingScreen();\n\n        const camera = new ArcRotateCamera('camera1',\n            Math.PI / 2, Math.PI / 2, 9.0, Vector3.Zero(), scene);\n        camera.minZ = 0.001;\n        camera.lowerRadiusLimit = 9.0;\n        camera.upperRadiusLimit = 9.0;\n        scene.activeCameras.push(camera);\n        camera.attachControl(canvas, true);\n\n        const light = new HemisphericLight('light1', Vector3.Up(), scene);\n        light.intensity = 0.7;\n\n        const background = new Layer('background',\n            '/assets/images/jeremy-perkins-uhjiu8FjnsQ-unsplash.jpg', scene);\n        background.isBackground = true;\n        background.texture.level = 0;\n        background.texture.wAng = .2;\n\n        loadResources(scene).then((loadedMeshes) => {\n            setResourcesLoaded(true);\n            loadCurrentShip(currentShip, scene, loadedMeshes);\n        });\n\n        scene.onBeforeRenderObservable.add(() => {\n            const deltaTimeInMillis = scene.getEngine().getDeltaTime();\n\n            _.each(scene.meshes, (mesh) => {\n                const rpm = 2;\n                mesh.rotation.y +=\n                    ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\n                mesh.rotation.z +=\n                    ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\n            });\n        });\n    };\n\n    const checkEnoughShipsAndDone = () => {\n        const notEnoughShips = currentCp < props.maxCp;\n        setNotEnoughShips(notEnoughShips);\n        if (!notEnoughShips) {\n            onDone();\n        }\n    };\n\n    return (\n        <div className=\"ShipSelection\">\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"ship-selection\">\n                <Scene onSceneMount={onSceneMount}/>\n            </Engine>\n            {resourcesLoaded &&\n                <div className=\"ui\">\n                    <div className=\"uiElement shipName\">\n                        {Ships[currentShip].name}\n                    </div>\n                    <div className=\"uiElement sideBox shipStats\">\n                        <div>\n                            HP: {Ships[currentShip].stats.hp}\n                        </div>\n                        <div>\n                            Attack: {Ships[currentShip].stats.attack.base} - {Ships[currentShip].stats.attack.base + Ships[currentShip].stats.attack.variable}\n                        </div>\n                        <div>\n                            Defence: {Ships[currentShip].stats.defence}\n                        </div>\n                        <div>\n                            Speed: {Ships[currentShip].stats.speed}\n                        </div>\n                        <div>\n                            Range: {Ships[currentShip].stats.range}\n                        </div>\n                        <div>\n                            Accuracy: {Ships[currentShip].stats.accuracy}\n                        </div>\n                        <div>\n                            Agility: {Ships[currentShip].stats.agility}\n                        </div>\n                    </div>\n                    <div className=\"uiElement sideBox shipControls\">\n                        <div className=\"addOrRemoveShip addShip\" onClick={addShip}>\n                            +\n                        </div>\n                        <div>\n                            Max CP: <span className=\"maxCp\">{props.maxCp}</span>\n                        </div>\n                        <div>\n                            CP Cost: {Ships[currentShip].stats.cp}\n                        </div>\n                        <div>\n                            Used ships: {selectedShips[currentShip] || 0}\n                        </div>\n                        <div>\n                            Used CP: {currentCp}\n                        </div>\n                        <div className=\"addOrRemoveShip removeShip\" onClick={removeShip}>\n                            -\n                        </div>\n                    </div>\n                    <div className=\"uiElement shipDescription\">\n                        {Ships[currentShip].description}\n                    </div>\n                    <div className=\"uiElement chevron left\" onClick={prevShip}/>\n                    <div className=\"uiElement chevron right\" onClick={nextShip}/>\n                    <div className=\"uiElement doneBox bottomBox\" onClick={checkEnoughShipsAndDone}>\n                        DONE\n                    </div>\n                    <a className=\"uiElement cancelBox bottomBox\" href=\"/\">\n                        BACK\n                    </a>\n                    <div className=\"omegaTip\">\n                        <div className=\"title\">\n                            Ship Selection\n                        </div>\n                        <div className=\"explanation\">\n                            <div className=\"tip\">\n                                1. The amount of ships in a fight is determined by the Command Power (CP) of the Defender fleet.\n                            </div>\n                            <div className=\"tip\">\n                                2. Each ship costs a certain amount of CP.\n                            </div>\n                            <div className=\"tip\">\n                                3. The Attacker selects a fleet, the total CP of which can not exceed the total CP of the Defender.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n            {notEnoughShips &&\n                <div className=\"modal\">\n                    <div className=\"modal-popup\">\n                        <div className=\"modal-body\">\n                            <div className=\"modal-title\">You can still add ships to your fleet, Admiral!</div>\n                            <div>Tip: Add ships to your fleet with the + button to the right of ship portrait.</div>\n                        </div>\n                        <div className=\"modal-buttons\">\n                            <div className=\"modal-button left\" onClick={() => { setNotEnoughShips(false); }}>\n                                Back\n                            </div>\n                            <div className=\"modal-button right\" onClick={() => {\n                                setNotEnoughShips(false);\n                                onDone();\n                            }}>\n                                Start Anyway\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n","import { Vector3 } from '@babylonjs/core';\n\nexport const CommanderRarities = {\n    Common: 0,\n    Rare: 1,\n    Epic: 2,\n    Legendary: 3,\n};\n\nexport const CommanderRaritiesColors = {\n    0: '#73ffbe',\n    1: '#2196F3',\n    2: '#7B1FA2',\n    3: '#FFD740',\n};\n\nexport const commanderRarityToString = (rarity) => {\n    const lookup = {\n        0: 'Common',\n        1: 'Rare',\n        2: 'Epic',\n        3: 'Legendary'\n    };\n\n    return lookup[rarity] || '';\n};\n\nexport const Commanders = [\n    {\n        name: 'XT-101',\n        asset: 'assets/robot_5/',\n        description: 'Standard issue command robot issued to all Commanders. First and last iteration of its kind, provides slight bonuses to attack and defence.',\n        stats: {\n            attack: {\n                modifier: 2,\n                vs: 0,\n            },\n            defence: {\n                modifier: 2,\n                vs: 0,\n            },\n        },\n        scale: 10,\n        visuals: {\n            pickAnimations: ['Ball_To_Stand', 'Idle', 'Idle_Look_Back', 'Idle_Look_Side'],\n            positionOffset: new Vector3(0, 0.8, 0),\n        },\n        rarity: CommanderRarities.Common,\n    },\n    {\n        name: 'YT-106',\n        asset: 'assets/worker_12/',\n        description: 'Military grade command robot, in its sixth iteration. Smarter and more effective than the XT, is also known to be moody and disingenuous.',\n        stats: {\n            attack: {\n                modifier: 3,\n                vs: 1,\n            },\n            defence: {\n                modifier: 3,\n                vs: 1,\n            },\n        },\n        scale: 300,\n        visuals: {\n\n        },\n        rarity: CommanderRarities.Rare,\n    },\n    {\n        name: 'HV-12',\n        asset: 'assets/mech_walker/',\n        description: 'Since the entire series is classified, not much is known about the origins of this killing machine. It is clearly an assasination model.',\n        stats: {\n            attack: {\n                modifier: 4,\n            },\n            defence: {\n                modifier: 3,\n            },\n        },\n        scale: 300,\n        visuals: {\n            positionOffset: new Vector3(0, -1.2, 0),\n            rotation: new Vector3(0, 0, 0),\n        },\n        rarity: CommanderRarities.Epic,\n    },\n    {\n        name: 'Magnus',\n        asset: 'assets/trooper/',\n        description: 'Cyborgs are the ultimate combination of human intuition and robot processing power. While lacking in empathy, they make for formiddable commanders.',\n        stats: {\n            attack: {\n                modifier: 10,\n            },\n            defence: {\n                modifier: 5,\n            },\n        },\n        scale: 60,\n        visuals: {\n            positionOffset: new Vector3(0, -1.8, 0),\n        },\n        rarity: CommanderRarities.Legendary,\n    },\n];\n","import React, { useState } from 'react';\nimport _ from 'underscore';\nimport { Engine, Scene } from 'react-babylonjs';\nimport { Vector3, AssetsManager, Layer, ArcRotateCamera, HemisphericLight } from '@babylonjs/core';\nimport '@babylonjs/loaders';\nimport { Commanders, CommanderRaritiesColors, commanderRarityToString } from '../definitions/Commanders';\nimport { Ships } from '../definitions/Ships';\nimport { OmegaLoadingScreen } from '../common/OmegaLoadingScreen';\nimport './CommanderSelection.css';\n\nexport const CommanderSelection = (props) => {\n    const [ currentCommander, setCurrentCommander ] = useState(0);\n    const [ scene, setScene ] = useState(null);\n    const [ loadedMeshes, setLoadedMeshes ] = useState([]);\n    const [ resourcesLoaded, setResourcesLoaded ] = useState(false);\n\n    const nextCommander = () => {\n        const newCommander = currentCommander + 1;\n        const newCommanderSafe = newCommander >= Commanders.length ? 0 : newCommander;\n        setCurrentCommander(newCommanderSafe);\n        loadCurrentCommander(newCommanderSafe, scene);\n    };\n\n    const prevCommander = () => {\n        const newCommander = currentCommander - 1;\n        const newCommanderSafe = newCommander < 0 ? Commanders.length - 1 : newCommander;\n        setCurrentCommander(newCommanderSafe);\n        loadCurrentCommander(newCommanderSafe, scene);\n    };\n\n    const onDone = () => {\n        props.onDone(currentCommander);\n    };\n\n    const afterLoadCommander = (scene, newMeshes, commanderIndex) => {\n        newMeshes[0].position = Commanders[commanderIndex].visuals.positionOffset ||\n            Vector3.Zero();\n        newMeshes[0].rotation = Commanders[commanderIndex].visuals.rotation ||\n            new Vector3(0, Math.PI, 0);\n        newMeshes[0].scalingDeterminant = 0.001 * Commanders[commanderIndex].scale;\n        newMeshes[0].isVisible = false;\n    }\n\n    const loadResources = (scene) => {\n        return new Promise((resolve, reject) => {\n            const loadedMeshes = [];\n\n            const assetsManager = new AssetsManager(scene);\n            _.each(Commanders, (commander, index) => {\n                const task = assetsManager.addMeshTask(index, '',\n                    Commanders[index].asset,\n                    'scene.gltf');\n                task.onSuccess = (task) => {\n                    loadedMeshes[index] = task.loadedMeshes;\n                    afterLoadCommander(scene, task.loadedMeshes, index);\n                };\n            });\n\n            assetsManager.onFinish = (tasks) => {\n                setLoadedMeshes(loadedMeshes);\n                resolve(loadedMeshes);\n            };\n\n            assetsManager.load();\n        });\n    };\n\n    const loadCurrentCommander = (currentCommander, scene, loadedMeshesOverride) => {\n        const meshes = loadedMeshesOverride || loadedMeshes;\n\n        _.each(scene.meshes, (mesh) => {\n            mesh.isVisible = false;\n        });\n\n        _.each(meshes[currentCommander], (mesh) => {\n            mesh.isVisible = true;\n        });\n\n        _.invoke(_.filter(scene.animationGroups, (group) => {\n            return _.contains(Commanders[currentCommander].visuals.pickAnimations, group.name);\n        }), 'play', true);\n    };\n\n    const onSceneMount = (e) => {\n        const { canvas, scene } = e;\n        setScene(scene);\n\n        scene.getEngine().loadingScreen = new OmegaLoadingScreen();\n\n        const camera = new ArcRotateCamera('camera1',\n            Math.PI / 2, Math.PI / 2, 9.0, Vector3.Zero(), scene);\n        camera.minZ = 0.001;\n        camera.upperAlphaLimit = Math.PI / 2;\n        camera.lowerAlphaLimit = Math.PI / 2;\n        camera.upperBetaLimit = Math.PI / 2;\n        camera.lowerBetaLimit = Math.PI / 2;\n        camera.lowerRadiusLimit = 9.0;\n        camera.upperRadiusLimit = 9.0;\n        scene.activeCameras.push(camera);\n        camera.attachControl(canvas, true);\n\n        const light = new HemisphericLight('light1', Vector3.Up(), scene);\n        light.intensity = 0.7;\n\n        const background = new Layer('background',\n            '/assets/images/jeremy-perkins-uhjiu8FjnsQ-unsplash.jpg', scene);\n        background.isBackground = true;\n        background.texture.level = 0;\n        background.texture.wAng = .2;\n\n        loadResources(scene).then((loadedMeshes) => {\n            setResourcesLoaded(true);\n            loadCurrentCommander(currentCommander, scene, loadedMeshes);\n        });\n    };\n\n    const commanderRarityColor = CommanderRaritiesColors[Commanders[currentCommander].rarity];\n    const commanderRarityString = commanderRarityToString(Commanders[currentCommander].rarity);\n\n    const commanderAttackSuffix = _.has(Commanders[currentCommander].stats.attack, 'vs')\n        ? ` vs ${Ships[Commanders[currentCommander].stats.attack.vs].name}`\n        : '';\n    const commanderAttackString = `+${Commanders[currentCommander].stats.attack.modifier}${commanderAttackSuffix}`;\n\n    const commanderDefenceSuffix = _.has(Commanders[currentCommander].stats.defence, 'vs')\n        ? ` vs ${Ships[Commanders[currentCommander].stats.defence.vs].name}`\n        : '';\n    const commanderDefenceString = `+${Commanders[currentCommander].stats.defence.modifier}${commanderDefenceSuffix}`;\n\n\n    return (\n        <div className=\"CommanderSelection\">\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"ship-selection\">\n                <Scene onSceneMount={onSceneMount}/>\n            </Engine>\n            {resourcesLoaded &&\n                <div className=\"ui\">\n                    <div className=\"uiElement commanderName\" style={{color: commanderRarityColor}}>\n                        {Commanders[currentCommander].name}\n                    </div>\n                    <div className=\"uiElement sideBox commanderStats\">\n                        <div>\n                            Rarity: <span style={{color: commanderRarityColor}}>{commanderRarityString}</span>\n                        </div>\n                        <div>\n                            Level: 1\n                        </div>\n                        <div>\n                            Experience: 0/1000\n                        </div>\n                    </div>\n                    <div className=\"uiElement sideBox commanderControls\">\n                        <div>\n                            Attack:\n                            <div>{commanderAttackString}</div>\n                        </div>\n                        <div>\n                            Defence:\n                            <div>{commanderDefenceString}</div>\n                        </div>\n                    </div>\n                    <div className=\"uiElement commanderDescription\">\n                        {Commanders[currentCommander].description}\n                    </div>\n                    <div className=\"uiElement chevron left\" onClick={prevCommander}/>\n                    <div className=\"uiElement chevron right\" onClick={nextCommander}/>\n                    <div className=\"uiElement doneBox bottomBox\" onClick={onDone}>\n                        DONE\n                    </div>\n                    <a className=\"uiElement cancelBox bottomBox\" href=\"/\">\n                        BACK\n                    </a>\n                    <div className=\"omegaTip\">\n                        <div className=\"title\">\n                            Commander Selection\n                        </div>\n                        <div className=\"explanation\">\n                            <div className=\"tip\">\n                                1. Each fleet in a fight is led by a Commander.\n                            </div>\n                            <div className=\"tip\">\n                                2. Commanders have different stats, skills, and rarity levels.\n                            </div>\n                            <div className=\"tip\">\n                                3. By winning in Ranked Combat, Commanders increase their experience and effectiveness.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport _ from 'underscore';\nimport { Engine, Scene } from 'react-babylonjs';\nimport { Vector3, Color3, Mesh, AssetsManager, StandardMaterial, ParticleHelper, Layer,\n    Animation, ArcRotateCamera, HemisphericLight } from '@babylonjs/core';\nimport '@babylonjs/loaders';\nimport { Ships } from '../definitions/Ships';\nimport { Commanders } from '../definitions/Commanders';\nimport { OmegaLoadingScreen } from '../common/OmegaLoadingScreen';\nimport './Combat.css';\n\nconst LASER_LENGTH_MS = 500;\nconst SHOOT_GAP_MS = 500;\n\n// props: selectionLhs, selectionRhs, commanderLhs, commanderRhs, result\nexport const Combat = (props) => {\n    const [ round, setRound ] = useState(0);\n    const [ showingResult, setShowingResult ] = useState(false);\n    const [ combatLog, setCombatLog ] = useState('');\n    const [ resourcesLoaded, setResourcesLoaded ] = useState(false);\n    let shipMeshesLhs = [];\n    let shipMeshesRhs = [];\n\n    const afterImportMeshes = (scene, newMeshes, currentShip,\n        basePosition, count, direction, isLhs) => {\n\n        newMeshes[0].position = new Vector3(basePosition + currentShip * direction, 0, -currentShip * 0.2);\n        newMeshes[0].rotation = new Vector3(Math.PI * 2, Math.PI / 2  * direction, Math.PI / 2 * -direction);\n        newMeshes[0].scalingDeterminant = 0.00013 * Ships[currentShip].scale;\n\n        _.each(newMeshes, (newMesh) => {\n            newMesh.material = new StandardMaterial(_.uniqueId(), scene);\n            newMesh.material.diffuseColor = isLhs\n                ? new Color3(0, 1, 0)\n                : new Color3(1, 1, 0)\n        });\n\n        if (isLhs) {\n            shipMeshesLhs[currentShip] = [ newMeshes[0] ];\n        } else {\n            shipMeshesRhs[currentShip] = [ newMeshes[0] ];\n        }\n\n        for (let i = 0; i < count - 1; i++) {\n            const clonedMesh = newMeshes[0].clone();\n\n            if (i % 2 === 0) {\n                clonedMesh.position.y -= (Math.floor(i / 2) + 1) * Ships[currentShip].combatScale;\n            } else {\n                clonedMesh.position.y += (Math.floor(i / 2) + 1) * Ships[currentShip].combatScale;\n            }\n\n            if (isLhs) {\n                shipMeshesLhs[currentShip].push(clonedMesh);\n            } else {\n                shipMeshesRhs[currentShip].push(clonedMesh);\n            }\n        }\n    };\n\n\n    const loadResources = (scene) => {\n        return new Promise((resolve, reject) => {\n            const assetsManager = new AssetsManager(scene);\n\n            _.each(props.selectionLhs, (count, index) => {\n                if (count > 0) {\n                    shipMeshesLhs[index] = [];\n                    const task = assetsManager.addMeshTask(index, '',\n                        Ships[index].asset,\n                        Ships[index].sceneFile || 'scene.gltf');\n                    task.onSuccess = (task) => {\n                        afterImportMeshes(scene, task.loadedMeshes, index, 10, count, 1, true);\n                    };\n                }\n            });\n\n            _.each(props.selectionRhs, (count, index) => {\n                if (count > 0) {\n                    shipMeshesRhs[index] = [];\n                    const task = assetsManager.addMeshTask(index, '',\n                        Ships[index].asset,\n                        'scene.gltf');\n                    task.onSuccess = (task) => {\n                        afterImportMeshes(scene, task.loadedMeshes, index, -10, count, -1, false);\n                    };\n                }\n            });\n\n            assetsManager.onFinish = (tasks) => {\n                resolve();\n            };\n\n            assetsManager.load();\n        });\n    };\n\n    const moveShips = (scene, move, isLhs) => {\n        const meshes = isLhs ? shipMeshesLhs[move.source] : shipMeshesRhs[move.source];\n\n        return Promise.all(_.map(meshes, (mesh) => {\n            return new Promise((resolve/*, reject*/) => {\n                const framerate = 10;\n                const slide = new Animation(_.uniqueId(), 'position.x', framerate,\n                    Animation.ANIMATIONTYPE_FLOAT, Animation.ANIMATIONLOOPMODE_CONSTANT);\n                const direction = isLhs ? -1 : 1;\n                const keyFrames = [\n                    {\n                        frame: 0,\n                        value: mesh.position.x,\n                    },\n                    {\n                        frame: framerate,\n                        value: mesh.position.x + Math.abs(move.targetPosition - mesh.position.x) * direction,\n                    },\n                    {\n                        frame: 2*framerate,\n                        value: move.targetPosition,\n                    }\n                ];\n                slide.setKeys(keyFrames);\n                mesh.animations = [ slide ];\n\n                scene.beginAnimation(mesh, 0, 2 * framerate, false, 2, resolve);\n            });\n        }));\n    };\n\n    const applyHpsToVisuals = (scene, target, isLhs, shipHpsLhs, shipHpsRhs) => {\n        const hpPerShip = Ships[target].stats.hp;\n        const hpsLeft = isLhs ? shipHpsRhs[target] : shipHpsLhs[target];\n        const shipsLeft = Math.max(Math.ceil(hpsLeft / hpPerShip), 0);\n        let meshes = isLhs ? shipMeshesRhs[target] : shipMeshesLhs[target];\n        const shipsToRemove = meshes.length - shipsLeft;\n\n        for (let removeIndex = 0; removeIndex < shipsToRemove; removeIndex++) {\n            const meshToRemove = meshes.shift();\n\n            // IMPROVEME only createasync once\n            ParticleHelper.CreateAsync('explosion', scene).then((set) => {\n                set.systems.forEach(s => {\n                    s.worldOffset = meshToRemove.position;\n                    s.disposeOnStop = true;\n                    s.maxSize = 0.01;\n                    s.minSize = 0.001;\n                });\n                set.systems = [ set.systems[0] ];\n                set.start();\n            });\n\n            meshToRemove.dispose();\n        }\n    };\n\n    let localLog = '';\n\n    const logAttack = (move, isLhs) => {\n        const prefix = isLhs ? '[Attacker]' : '[Defender]';\n        const newEntry = `${prefix} ${Ships[move.source].name} hits ${Ships[move.target].name} for ${move.damage} damage.`;\n        localLog = newEntry + '\\n' + localLog;\n        setCombatLog(localLog);\n    };\n\n    const logRoundStart = (round) => {\n        const newEntry = `Round ${round + 1} begins.\\n\\n`;\n        localLog = newEntry + localLog;\n        setCombatLog(localLog);\n    };\n\n    const showLaser = (scene, source, sourceMesh, targetMesh) => {\n        const mat = new StandardMaterial('laserMat', scene);\n        mat.alpha = 0.8;\n        mat.diffuseColor = Ships[source].visuals.beamColor;\n        mat.backFaceCulling = false;\n\n        const lines = Mesh.CreateTube('laser', [\n            sourceMesh.position,\n            targetMesh.position\n        ], Ships[source].visuals.beamWidth, 64, null, 0, scene, false, Mesh.FRONTSIDE);\n        lines.material = mat;\n        lines.convertToFlatShadedMesh();\n\n        setTimeout(() => {\n            lines.dispose();\n        }, LASER_LENGTH_MS);\n    };\n\n    const showAttacks = (scene, move, isLhs) => {\n        // for ships, each ship attacks next ship [0..n] meshes\n        const sourceMeshes = isLhs ? shipMeshesLhs : shipMeshesRhs;\n        const targetMeshes = isLhs ? shipMeshesRhs : shipMeshesLhs;\n        _.each(sourceMeshes[move.source], (sourceMesh, ind) => {\n            if (!targetMeshes[move.target] || !targetMeshes[move.target].length) {\n                return;\n            }\n\n            const targetMeshIndex = ind % targetMeshes[move.target].length;\n            const targetMesh = targetMeshes[move.target][targetMeshIndex];\n\n            showLaser(scene, move.source, sourceMesh, targetMesh);\n        });\n    };\n\n    const playMoves = (scene, moves, isLhs, shipHpsLhs, shipHpsRhs) => {\n        const _recursiveMover = (ind, mainResolver) => {\n            const move = moves[ind];\n\n            if (!move) {\n                return mainResolver();\n            }\n\n            let movePromise;\n            if (move.moveType === 2) {\n                movePromise = moveShips(scene, move, isLhs);\n            } else if (move.moveType === 1) {\n                movePromise = new Promise((resolve, reject) => {\n                    showAttacks(scene, move, isLhs);\n                    const shipHps = isLhs ? shipHpsRhs : shipHpsLhs;\n                    shipHps[move.target] -= move.damage;\n                    applyHpsToVisuals(scene, move.target, isLhs, shipHpsLhs,\n                        shipHpsRhs);\n                    logAttack(move, isLhs);\n\n                    setTimeout(resolve, SHOOT_GAP_MS);\n                });\n            }\n\n            movePromise.then(() => {\n                if (ind + 1 < moves.length) {\n                    _recursiveMover(ind + 1, mainResolver);\n                } else {\n                    mainResolver();\n                }\n            });\n        }\n\n        return new Promise((resolve, reject) => {\n            _recursiveMover(0, resolve);\n        });\n    };\n\n    const playRound = (scene, round, shipHpsLhs, shipHpsRhs) => { // recursive\n        if (round >= props.result.rounds) {\n            setShowingResult(true);\n            return;\n        }\n\n        setRound(round);\n        logRoundStart(round);\n\n        const lhsMoves = _.filter(props.result.lhs, (move) => {\n            return move.round === round && move.moveType !== 0;\n        });\n        const rhsMoves = _.filter(props.result.rhs, (move) => {\n            return move.round === round && move.moveType !== 0;\n        });\n\n        playMoves(scene, lhsMoves, true, shipHpsLhs, shipHpsRhs).then(() => {\n            playMoves(scene, rhsMoves, false, shipHpsLhs, shipHpsRhs).then(() => {\n                playRound(scene, round + 1, shipHpsLhs, shipHpsRhs);\n            });\n        })\n    };\n\n    const playCombat = (scene) => {\n        const shipHpsLhs = _.map(props.selectionLhs, (count, index) => {\n            return Ships[index].stats.hp * count;\n        });\n        const shipHpsRhs = _.map(props.selectionRhs, (count, index) => {\n            return Ships[index].stats.hp * count;\n        });\n\n        playRound(scene, 0, shipHpsLhs, shipHpsRhs);\n    };\n\n    const onSceneMount = (e) => {\n        const { canvas, scene } = e;\n\n        scene.getEngine().loadingScreen = new OmegaLoadingScreen();\n\n        const camera = new ArcRotateCamera('camera1',\n            Math.PI / 2, (Math.PI / 2) + Math.PI / 4, 18.5, Vector3.Zero(), scene);\n        camera.minZ = 0.001;\n        camera.lowerRadiusLimit = 18.5;\n        camera.upperRadiusLimit = 18.5;\n        scene.activeCameras.push(camera);\n        camera.attachControl(canvas, true);\n\n        const light = new HemisphericLight('light1', new Vector3(0, 0, 1), scene);\n        light.intensity = 0.7;\n\n        const background = new Layer('background',\n            '/assets/images/jeremy-perkins-uhjiu8FjnsQ-unsplash.jpg', scene);\n        background.isBackground = true;\n        background.texture.level = 0;\n        background.texture.wAng = .2;\n\n        loadResources(scene).then(() => {\n            setResourcesLoaded(true);\n            playCombat(scene);\n        })\n    };\n\n    const getWinnerString = () => {\n        if (props.result.lhsDead) {\n            return 'Defender Wins';\n        } else if (props.result.rhsDead) {\n            return 'Attacker Wins';\n        } else {\n            return 'Draw';\n        }\n    }\n\n    const commanderAssetLhs = Commanders[props.commanderLhs].asset + 'thumb.png';\n    const commanderAssetRhs = Commanders[props.commanderRhs].asset + 'thumb.png';\n\n    return (\n        <div className=\"Combat\">\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"combat\">\n                <Scene onSceneMount={onSceneMount}/>\n            </Engine>\n            {resourcesLoaded &&\n                <div className=\"ui\">\n                    <div className=\"uiElement commander lhs\">\n                        <img alt=\"Commander\" src={commanderAssetLhs}>\n                        </img>\n                    </div>\n                    <div className=\"uiElement commander rhs\">\n                        <img alt=\"Commander\" src={commanderAssetRhs}>\n                        </img>\n                    </div>\n                    <div className=\"uiElement currentRound\">\n                        Round {round+1}\n                    </div>\n                    <div className=\"uiElement combatLog\">\n                        <pre>{combatLog}</pre>\n                    </div>\n                    <div className=\"uiElement doneBox bottomBox\" onClick={() => { setShowingResult(true) }}>\n                        FINISH\n                    </div>\n                    <div className=\"miniLogoBox\"></div>\n                    {showingResult &&\n                        <div className=\"result\">\n                            <div className=\"resultDialog\">\n                                <div className=\"winner\">\n                                    {getWinnerString()}\n                                </div>\n                                <a className=\"exitButton\" href=\"/\">\n                                    EXIT\n                                </a>\n                            </div>\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    );\n}\n","import './OpponentSelection.css';\nimport React from 'react';\nimport _ from 'underscore';\nimport { ethers } from 'ethers';\n\n\n// props.opponents, props.onDone\nexport const OpponentSelection = (props) => {\n    const selectOpponent = (opponent) => {\n        props.onDone(opponent);\n    };\n\n    const renderOpponent = (opponent, ind) => {\n        return (\n            <div\n                key={ind}\n                className=\"mainMenuItem\"\n                onClick={() => { selectOpponent(opponent) }}\n            >\n                {ethers.utils.parseBytes32String(opponent.name)}\n            </div>\n        );\n    };\n\n    const opponents = _.clone(props.opponents).reverse();\n\n    return (\n        <div className=\"OpponentSelection\">\n            <div className=\"ui\">\n                <div className=\"mainTitle\">\n                </div>\n                <div className=\"mainMenu\">\n                    {_.map(opponents, renderOpponent)}\n                </div>\n                <a className=\"uiElement cancelBox bottomBox\" href=\"/\">\n                    BACK\n                </a>\n            </div>\n        </div>\n    );\n};\n","import './Leaderboard.css';\nimport React from 'react';\nimport _ from 'underscore';\nimport { ethers } from 'ethers';\n\n\n// props.opponents, props.onDone\nexport const Leaderboard = (props) => {\n    const renderEntry = (entry, ind) => {\n        return (\n            <div\n                key={ind}\n                className=\"mainMenuItem\"\n            >\n                <div className=\"name\">{ethers.utils.parseBytes32String(entry.name)}</div>\n                <div className=\"address\">Address: {entry.player}</div>\n                <div className=\"wins\">Wins: {entry.wins}</div>\n                <div className=\"losses\">Losses: {entry.losses}</div>\n            </div>\n        );\n    };\n\n    const leaderboard = _.clone(props.leaderboard);\n    leaderboard.sort((lhs, rhs) => {\n        return rhs.wins.toNumber() - lhs.wins.toNumber();\n    });\n\n    return (\n        <div className=\"Leaderboard\">\n            <div className=\"ui\">\n                <div className=\"mainTitle\">\n                </div>\n                <div className=\"mainMenu\">\n                    {_.map(leaderboard, renderEntry)}\n                </div>\n                <a className=\"uiElement cancelBox bottomBox\" href=\"/\">\n                    BACK\n                </a>\n            </div>\n        </div>\n    );\n};\n","import './ShowLogs.css';\nimport React from 'react';\nimport _ from 'underscore';\nimport { ethers } from 'ethers';\n\n\n// props.opponents, logs, props.onDone\nexport const ShowLogs = (props) => {\n    const selectLog = (log) => {\n        props.onDone(log);\n    };\n\n    const addressToName = (address) => {\n        const opponent = _.findWhere(props.opponents, {\n            player: address,\n        });\n        return opponent\n            ? ethers.utils.parseBytes32String(opponent.name)\n            : 'Anonymous';\n    }\n\n    const renderLog = (log, ind) => {\n        return (\n            <div\n                key={ind}\n                className=\"mainMenuItem\"\n                onClick={() => { selectLog(log) }}\n            >\n                <span className=\"address\">{addressToName(log.args[0])}</span>\n                <span className=\"vs\"> VS </span>\n                <span className=\"address\">{addressToName(log.args[1])}</span>\n            </div>\n        );\n    };\n\n    const logs = _.clone(props.logs).reverse();\n\n    return (\n        <div className=\"ShowLogs\">\n            <div className=\"ui\">\n                <div className=\"mainTitle\">\n                </div>\n                <div className=\"mainMenu\">\n                    {_.map(logs, renderLog)}\n                </div>\n                <a className=\"uiElement cancelBox bottomBox\" href=\"/\">\n                    BACK\n                </a>\n            </div>\n        </div>\n    );\n};\n","import { ethers } from 'ethers';\n\n\nconst GAS_BUFFER = 20000;\n\nexport class FastProvider extends ethers.providers.Web3Provider {\n    async estimateGas(tx) {\n        const gas = await super.estimateGas(tx);\n        return gas.add(GAS_BUFFER);\n    }\n}\n","import './App.css';\nimport React, { Component } from 'react';\nimport { ethers } from 'ethers';\nimport * as TrinitySDK from \"@elastosfoundation/trinity-dapp-sdk\";\nimport { ShipSelection } from './scenes/ShipSelection';\nimport { CommanderSelection } from './scenes/CommanderSelection';\nimport { Combat } from './scenes/Combat';\nimport { OpponentSelection } from './ui/OpponentSelection';\nimport { Leaderboard } from './ui/Leaderboard';\nimport { ShowLogs } from './ui/ShowLogs';\nimport { Ships } from './definitions/Ships';\nimport { FastProvider } from './common/FastProvider';\nimport _ from 'underscore';\n\n\n\nconst Modes = {\n    MainScreen: 0,\n    ShipSelection: 1,\n    CommanderSelection: 2,\n    CommanderPreview: 3,\n    Combat: 4,\n    OpponentSelection: 5,\n    ShowLogs: 6,\n    Leaderboard: 7,\n};\n\nconst TRAINING_SELECTION = [25, 18, 16, 6];\n\nexport default class OmegaApp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.defaultLoadedState = {\n            mode: Modes.MainScreen,\n            loading: false,\n            trainingSelfSelection: null,\n            trainingResult: null,\n            trainingSelfCommander: null,\n            trainingOpponent: null,\n            trainingOpponentSelection: null,\n            trainingOpponentCommander: null,\n            trainingCp: null,\n            defenders: null,\n            settingDefence: false,\n            settingAttack: false,\n        };\n\n        this.defaultUnloadedState = {\n            ownAccount: null,\n            web3Loaded: false,\n            ethBalance: 0,\n            blockNumber: 0,\n            newOmegaContract: null,\n            hasUnseenFights: false,\n            playerName: window.localStorage.getItem('OmegaPlayerName') || 'Anonymous',\n        };\n\n        this.state = {\n            ...this.defaultLoadedState,\n            ...this.defaultUnloadedState,\n        };\n    }\n\n    shipSelectionDone(selection) {\n        this.setState({\n            mode: Modes.CommanderSelection,\n            trainingSelfSelection: selection,\n        });\n    }\n\n    async commanderSelectionDone(commander) {\n        this.setState({\n            loading: true,\n        });\n\n        if (this.state.settingDefence) {\n            try {\n                const tx = await this.state.newOmegaContract.registerDefence(\n                    this.state.trainingSelfSelection,\n                    commander,\n                    ethers.utils.formatBytes32String(this.state.playerName)\n                );\n\n                await tx.wait();\n            } catch (error) {\n            }\n        } else if (this.state.settingAttack) {\n            try {\n                const tx = await this.state.newOmegaContract.attack(\n                    this.state.trainingOpponent,\n                    this.state.trainingSelfSelection,\n                    commander\n                );\n\n                await tx.wait();\n            } catch (error) {\n            }\n        } else {\n            const seed = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n            let result;\n\n            try {\n                result = await this.state.newOmegaContract.replay(\n                    seed,\n                    this.state.trainingSelfSelection,\n                    this.state.trainingOpponentSelection,\n                    commander,\n                    this.state.trainingOpponentCommander\n                );\n            } catch (error) {\n                return this.setState(this.defaultLoadedState);\n            }\n\n            return this.setState({\n                mode: Modes.Combat,\n                trainingSelfCommander: commander,\n                trainingResult: result,\n            });\n        }\n\n        this.setState(this.defaultLoadedState);\n    }\n\n    commanderPreviewDone() {\n        this.setState(this.defaultLoadedState);\n    }\n\n    opponentSelectionDone(opponent) {\n        const trainingOpponentSelection = opponent.defenceSelection;\n\n        this.setState({\n            mode: Modes.ShipSelection,\n            settingAttack: true,\n            trainingOpponent: opponent.player,\n            trainingOpponentSelection,\n            trainingOpponentCommander: opponent.commander,\n            trainingCp: this._selectionToCp(trainingOpponentSelection),\n        });\n    }\n\n    _selectionToCp(selection) {\n        return _.reduce(selection, (memo, num, index) => {\n            return memo + (num || 0) * Ships[index].stats.cp;\n        }, 0);\n    }\n\n    handlePlayerNameChange(e) {\n        window.localStorage.setItem('OmegaPlayerName', e.target.value);\n        this.setState({\n            playerName: e.target.value,\n        });\n    }\n\n    training() {\n        const trainingOpponentSelection = TRAINING_SELECTION;\n\n        this.setState({\n            mode: Modes.ShipSelection,\n            trainingOpponentSelection,\n            trainingOpponentCommander: 0,\n            trainingCp: this._selectionToCp(trainingOpponentSelection),\n        });\n    }\n\n    commanders() {\n        this.setState({\n            mode: Modes.CommanderPreview,\n        });\n    }\n\n    async defend() {\n        this.setState({\n            loading: true,\n        });\n\n        let myDefence;\n\n        try{\n            myDefence = await this.state.newOmegaContract.getOwnDefence();\n        } catch (error) {\n            return this.setState(this.defaultLoadedState);\n        }\n\n        const trainingOpponentSelection = myDefence && myDefence.isInitialised\n            ? myDefence.defenceSelection\n            : TRAINING_SELECTION;\n\n        this.setState({\n            mode: Modes.ShipSelection,\n            settingDefence: true,\n            trainingOpponentSelection,\n            trainingCp: this._selectionToCp(trainingOpponentSelection),\n            loading: false,\n        });\n    }\n\n    attachBlockchainEvents(provider, newOmegaContract, ownAccount) {\n        const filter = newOmegaContract.filters.FightComplete();\n        filter.attacker = ownAccount;\n\n        provider.on(filter, () => {\n            this.setState({\n                hasUnseenFights: true,\n            });\n        });\n\n        provider.on('block', (blockNumber) => {\n            this._checkBalance(provider, ownAccount);\n            this.setState({\n                blockNumber,\n            });\n        });\n    }\n\n    async showLogs() {\n        const filterAttacker = this.state.newOmegaContract.filters.FightComplete();\n        filterAttacker.fromBlock = this.state.provider.getBlockNumber().then((b) => b - 100000);\n        filterAttacker.toBlock = 'latest';\n        filterAttacker.attacker = this.state.ownAccount;\n\n        const filterDefender = this.state.newOmegaContract.filters.FightComplete();\n        filterAttacker.fromBlock = this.state.provider.getBlockNumber().then((b) => b - 100000);\n        filterAttacker.toBlock = 'latest';\n        filterAttacker.defender = this.state.ownAccount;\n\n        this.setState({\n            loading: true,\n        });\n\n        let logsAttacker, logsDefender;\n\n        try {\n            logsAttacker = await this.state.provider.getLogs(filterAttacker);\n            logsDefender = await this.state.provider.getLogs(filterDefender);\n        } catch (error) {\n            return this.setState(this.defaultLoadedState);\n        }\n\n        const logs = logsAttacker.concat(logsDefender);\n        const logsParsed = _.map(logs, (log) => {\n            return this.state.newOmegaContract.interface.parseLog(log);\n        });\n\n        let defenders;\n\n        try {\n            defenders = await this.state.newOmegaContract.getAllDefenders();\n        } catch (error) {\n            return this.setState(this.defaultLoadedState);\n        }\n\n        this.setState({\n            mode: Modes.ShowLogs,\n            logs: logsParsed,\n            loading: false,\n            hasUnseenFights: false,\n            defenders,\n        });\n    }\n\n    async logSelectionDone(log) {\n        const metaResult = log.args[2];\n\n        this.setState({\n            loading: true,\n        });\n\n        let result;\n\n        try {\n            result = await this.state.newOmegaContract.replay(\n                metaResult.seed,\n                metaResult.selectionLhs,\n                metaResult.selectionRhs,\n                metaResult.commanderLhs,\n                metaResult.commanderRhs);\n        } catch (error) {\n            return this.setState(this.defaultLoadedState);\n        }\n\n        const _parseHp = (hp) => {\n            return _.map(hp, (hpInst) => {\n                return hpInst.toNumber();\n            });\n        }\n\n        const resultJson = {\n            lhs: result.lhs,\n            rhs: result.rhs,\n            lhsHp: _parseHp(result.lhsHp),\n            rhsHp: _parseHp(result.rhsHp),\n            rounds: result.rounds,\n            selectionLhs: result.selectionLhs,\n            selectionRhs: result.selectionRhs,\n            commanderLhs: result.commanderLhs,\n            commanderRhs: result.commanderRhs,\n            lhsDead: result.lhsDead,\n            rhsDead: result.rhsDead,\n        };\n\n        this.setState({\n            mode: Modes.Combat,\n            trainingSelfSelection: resultJson.selectionLhs,\n            trainingSelfCommander: resultJson.commanderLhs,\n            trainingOpponentSelection: resultJson.selectionRhs,\n            trainingResult: resultJson,\n            loading: false,\n        });\n    }\n\n    async attack() {\n        this.setState({\n            loading: true,\n        });\n\n        let defenders;\n\n        try {\n            defenders = await this.state.newOmegaContract.getAllDefenders();\n        } catch (error) {\n            return this.setState(this.defaultLoadedState);\n        }\n\n        this.setState({\n            mode: Modes.OpponentSelection,\n            defenders,\n            loading: false,\n        });\n    }\n\n    async leaderboard() {\n        this.setState({\n            loading: true,\n        });\n\n        let leaderboard;\n\n        try {\n            leaderboard = await this.state.newOmegaContract.getLeaderboard();\n        } catch (error) {\n            return this.setState(this.defaultLoadedState);\n        }\n\n        this.setState({\n            mode: Modes.Leaderboard,\n            leaderboard,\n            loading: false,\n        });\n    }\n\n    render() {\n        const logsClassName = `mainMenuItem ${this.state.hasUnseenFights ? 'unread' : ''}`;\n        const ethBalanceString = this._formatBalance(ethers.utils.formatEther(this.state.ethBalance));\n\n        return (\n            <div className=\"App\">\n                {this.state.mode === Modes.MainScreen &&\n                    <div className=\"mainScreen ui\">\n                        <div className=\"mainTitle\">\n                        </div>\n                        <div className=\"playerName\">\n                            <input autoCorrect=\"off\" type=\"text\" className=\"playerNameInput\" value={this.state.playerName}\n                                onChange={this.handlePlayerNameChange.bind(this)}/>\n                        </div>\n                        <div className=\"mainMenu\">\n                            <div className=\"mainMenuItem\" onClick={this.training.bind(this)}>\n                                TRAINING\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.commanders.bind(this)}>\n                                ACADEMY\n                            </div>\n                            <div className={logsClassName} onClick={this.showLogs.bind(this)}>\n                                LOGS\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.defend.bind(this)}>\n                                DEFENCE\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.attack.bind(this)}>\n                                ATTACK\n                            </div>\n                            <div className=\"mainMenuItem\" onClick={this.leaderboard.bind(this)}>\n                                RANKING\n                            </div>\n                        </div>\n                        <div className=\"versionBox uiElement bottomElement\">\n                            Version: 0.0.1 (c) celrisen.eth\n                        </div>\n                        <div className=\"ethBalance uiElement bottomElement\">\n                            Ξ{ethBalanceString} Block: {this.state.blockNumber}\n                        </div>\n                    </div>\n                }\n                {this.state.mode === Modes.ShipSelection &&\n                    <ShipSelection maxCp={this.state.trainingCp}\n                        defaultShips={this.state.trainingOpponentSelection}\n                        onDone={this.shipSelectionDone.bind(this)}/>\n                }\n                {this.state.mode === Modes.CommanderSelection &&\n                    <CommanderSelection onDone={this.commanderSelectionDone.bind(this)}/>\n                }\n                {this.state.mode === Modes.CommanderPreview &&\n                    <CommanderSelection onDone={this.commanderPreviewDone.bind(this)}/>\n                }\n                {this.state.mode === Modes.Combat &&\n                    <Combat selectionLhs={this.state.trainingSelfSelection}\n                        selectionRhs={this.state.trainingOpponentSelection}\n                        commanderLhs={this.state.trainingSelfCommander}\n                        commanderRhs={0}\n                        result={this.state.trainingResult}\n                    />\n                }\n                {this.state.mode === Modes.OpponentSelection &&\n                    <OpponentSelection opponents={this.state.defenders}\n                        onDone={this.opponentSelectionDone.bind(this)}\n                    />\n                }\n                {this.state.mode === Modes.ShowLogs &&\n                    <ShowLogs logs={this.state.logs}\n                        opponents={this.state.defenders} onDone={this.logSelectionDone.bind(this)}/>\n                }\n                {this.state.mode === Modes.Leaderboard &&\n                    <Leaderboard leaderboard={this.state.leaderboard}/>\n                }\n                <div\n                    id=\"omegaLoadingScreen\"\n                    style={this.state.web3Loaded && !this.state.loading ? {display: 'none'} : {}}>\n                    <div className=\"logo\"/>\n                    <div className=\"progressOuter progress-line\"/>\n                    <div className=\"status\">\n                        <span className=\"blockchain\">\n                            Waiting for blockchain...\n                        </span>\n                        <span className=\"assets\">\n                            Loading assets...\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this._initWeb3();\n    }\n\n    _formatBalance(balance) {\n        return parseFloat(balance, 10).toFixed(4).toString();\n    }\n\n    async _initWeb3() {\n        // const provider = new TrinitySDK.Ethereum.Web3.Providers.TrinityWeb3Provider();\n        const provider = new FastProvider(window.ethereum);\n        const signer = provider.getSigner();\n\n        // const provider = new Web3(window.ethereum);\n        const accounts = await window.ethereum.send('eth_requestAccounts');\n        const ownAccount = accounts.result[0];\n\n        await this._checkBalance(provider, ownAccount);\n        this.setState({\n            provider,\n            ownAccount,\n            signer,\n        }, () => {\n            this._loadContracts(provider, signer, ownAccount);\n        });\n    }\n\n    async _checkBalance(provider, ownAccount) {\n        const ethBalance = await provider.getBalance(ownAccount);\n        this.setState({\n            ethBalance,\n        });\n    }\n\n    _loadContracts(provider, signer, ownAccount) {\n        const newOmegaJson = require('./abi/NewOmega.json');\n        const newOmegaAddress = '0x74691ecA89eb9b842932ddEB9111c3CE21F9D6Be';\n        const newOmegaContract = new ethers.Contract(newOmegaAddress, newOmegaJson, signer);\n\n        this.attachBlockchainEvents(provider, newOmegaContract, ownAccount);\n        this.setState({\n            newOmegaContract,\n            web3Loaded: true,\n        });\n    }\n}\n\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { apps, flash, send } from 'ionicons/icons';\nimport OmegaApp from './OmegaApp';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\ndeclare let appManager: AppManagerPlugin.AppManager;\ndeclare let titleBarManager: TitleBarPlugin.TitleBarManager;\n\nconst App: React.FC = () => {\n  document.addEventListener('deviceready', () => {\n    titleBarManager.setVisibility(\n      1, // HIDDEN\n      1); // HIDDEN\n    appManager.setVisible('show');\n    window.screen.orientation.lock('landscape');\n  }, false);\n\n  return <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route path=\"/\" component={OmegaApp} exact={true} />\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n};\n\nexport default App;\n","import * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nSentry.init({\n  dsn: \"https://adf39eeb31a04f4c9e2ae1613a647396@o509705.ingest.sentry.io/5604612\",\n  debug: true,\n  autoSessionTracking: true,\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}